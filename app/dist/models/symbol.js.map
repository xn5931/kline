{"version":3,"sources":["../../src/models/symbol.js"],"names":["mysql","require","connection","createConnection","host","user","password","port","database","module","exports","insertOne","options","resData","cb","nowTime","Date","nowTimeStamp","getTime","date","ymd","collection","ex","obj","check","p","Promise","resolve","reject","dbhelper","find","mas","err","length","data","db","console","log","insert","value_arr","map","val","index","value","id","coinname","price","hight","low","vol","rate_percent","symbol_type","push","value_str","toString","sql","query","result","update","limitArrPrice","limitArrHight","limitArrLow","limitArrVol","limitArrRate_percent","limitArrTimestamp","limitWhatArr","j","limitObjPrice","limitObjHight","limitObjLow","limitObjVol","limitObjRate_percent","limitObjTimestamp","limitWhat","limitStrPrice","join","limitStrHight","limitStrLow","limitStrVol","limitStrRate_percent","limitStrTimestamp","limitWhatStr","substring","updateMany","then","Test3","findData"],"mappings":"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","file":"symbol.js","sourcesContent":["import db from '../db';\nimport dbhelper from './dbhelper';\nimport date from '../lib/date';\n\nvar mysql  = require('mysql'); \n\nvar connection = mysql.createConnection({    \n\n  host     : '127.0.0.1',      \n\n  user     : 'root',             \n\n  password : '123456', \n\n  port: '3306',                  \n\n  database: 'im_k_data',\n\n});\n//插入一条记录\nmodule.exports.insertOne=function(options,resData,cb){\n\n\tvar nowTime = new Date();//时间\n\tvar nowTimeStamp = new Date().getTime();//当前时间戳\n\t\tnowTimeStamp = date.ymd(nowTimeStamp);//年月日\n\tvar collection = options.ex+'_symbol_latest';//表\n\tvar obj={'whereObj':'TIMESTAMP'};//查询条件 'whereObj':'max(x) as x'\n\t\n\tfunction check(){//查询数据库是否有数据\n\n\t\tvar p = new Promise(function(resolve, reject){ \n\n\t\t\tdbhelper.find(collection,obj,function(mas,err){//查询数据库最新的一条数据\n\n\t\t\t\tif (!err && mas || mas === null) {\n\n\t\t\t\t\tif (mas === null || mas.length === 0) { //数据库为空\n\n\t\t\t\t\t\tvar data ={db:'insert'}; //插入数据\n\t\t\t\t\t\tresolve(data);//>>>\n\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tvar data ={db:'update'}; //更新数据\n\t\t\t\t\t\tresolve(data);//>>>\n\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tconsole.log(\"查询报错\",err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn p ;\n\t}\n\tfunction insert(data){//空表 - - 插入数据\n\n\t\tvar p = new Promise(function(resolve, reject){ \n\t\t\t\n\t\t\tvar value_arr = [];\n\t\t\t /* \n                数据库表中所需插入的数据\n                ID - - 自增 ok\n                COINNAME - - 币名 symbol（前）\n                PRICE - - 当前价 close\n                HIGHT - - 最高价 high\n                LOW - - 最低价 low\n                VOL - - 成交量 vol\n                RATE_PERCENT - - 涨跌幅百分比 （open-close）/open 保留小数点后一位（10.1%）\n                SYMBOL_TYPE - - 交易对类型(usdt,btc,eth...) symbol（后）\n                TIMESTAMP - - 时间戳 ok\n            */ \n\n\t\t\tresData.map((val,index)=>{//遍历最新数据\n\n\t\t\t\t\tvar value = '('+val.id+',\"'+val.coinname+'\",\"'+val.price+'\",\"'+val.hight+'\",\"'+val.low+'\",\"'+val.vol+'\",\"'+val.rate_percent+'\",\"'+val.symbol_type+'\",\"'+nowTimeStamp\n\t\t\t\t\t+'\")';//拼接获取的数据\n\n\t\t\t\t\tvalue_arr.push(value);//遍历出来的数据添加到数组\n\t\t\t})\n\n\t\t\tvar value_str = value_arr.toString();//数组转字符串\n\n\t\t\tvar  sql = 'INSERT INTO '+collection+'(ID,COINNAME,PRICE,HIGHT,LOW,VOL,RATE_PERCENT,SYMBOL_TYPE,TIMESTAMP) VALUES'+value_str+';';\n\n\t\t\t//插入k线数据\n\t\t\tconnection.query(sql,function (err, result) {\n\n\t\t        if(err){\n\n\t\t        \tconsole.log('[insertERROR] ',err);\n\n\t\t        \treturn ;\n\n\t\t        }else{\n\n\t\t        \tconsole.log('>>>>>>>>插入k线 Success'); \n\n\t\t        }\n\t\t        \t\n\t\t\t});\n\t\t\t\t\t\n\t\t\t\n\n\t\t\t});\n\n\t\t\treturn p ;\n\t\t\n\t}\n\tfunction update(){//更新数据\n\n\t\tvar p = new Promise(function(resolve, reject){ \n\n\t\tvar collection = options.ex+'_symbol_latest';\n\n\t\t//var whereObjAll = [{dbkey:\"price\"},{dbkey:\"hight\"},{dbkey:\"low\"},{dbkey:\"vol\"},{dbkey:\"rate_percent\"},{dbkey:\"timestamp\"}];\n\n\t\t//拼接limitStr>>>start\n\t\tvar limitArrPrice =[];//Price\n\t\tvar limitArrHight =[];//Hight\n\t\tvar limitArrLow =[];//Low\n\t\tvar limitArrVol =[];//Vol\n\t\tvar limitArrRate_percent =[];//Rate_percent\n\t\tvar limitArrTimestamp =[];//Timestamp\n\t\tvar limitWhatArr =[];////限制what(where id 后面的限制参数)--数组\n\n\t\tfor(var j in resData){\n\n\t\t\tvar limitObjPrice ='when '+resData[j].id+' then '+resData[j].price+' ';//拼接\n\t\t\tvar limitObjHight='when '+resData[j].id+' then '+resData[j].hight+' ';//拼接\n\t\t\tvar limitObjLow ='when '+resData[j].id+' then '+resData[j].low+' ';//拼接\n\t\t\tvar limitObjVol ='when '+resData[j].id+' then '+resData[j].vol+' ';//拼接\n\t\t\tvar limitObjRate_percent ='when '+resData[j].id+' then '+resData[j].rate_percent+' ';//拼接\n\t\t\tvar limitObjTimestamp ='when '+resData[j].id+' then \"'+nowTimeStamp+'\" ';//拼接\n\n\t\t\tlimitArrPrice.push(limitObjPrice);//Price\n\t\t\tlimitArrHight.push(limitObjHight);//Hight\n\t\t\tlimitArrLow.push(limitObjLow);//Low \n\t\t\tlimitArrVol.push(limitObjVol);//Vol\n\t\t\tlimitArrRate_percent.push(limitObjRate_percent);//Rate_percent\n\t\t\tlimitArrTimestamp.push(limitObjTimestamp);//Timestamp\n\n\t\t\tvar limitWhat = resData[j].id+',';//限制what(where id 后面的限制参数)--拼接\n\t\t\tlimitWhatArr.push(limitWhat);//限制what(where id 后面的限制参数)\n\t\t\t\n\t\t}\n\n\t\tvar limitStrPrice = limitArrPrice.join(''); //数组转字符串-Price\n\t\tvar limitStrHight = limitArrHight.join(''); //数组转字符串-Hight\n\t\tvar limitStrLow = limitArrLow.join(''); //数组转字符串-Low\n\t\tvar limitStrVol = limitArrVol.join(''); //数组转字符串-Vol\n\t\tvar limitStrRate_percent = limitArrRate_percent.join(''); //数组转字符串-Rate_percent\n\t\tvar limitStrTimestamp = limitArrTimestamp.join(''); //数组转字符串-Timestamp\n\n\t\t//console.log(\"limitArr>>>>>\",limitStr);\n\t\tvar limitWhatStr = limitWhatArr.join('');//数组转字符串\n\n\t\t\tlimitWhatStr = limitWhatStr.substring(0,limitWhatStr.length-1);//删除字符串最后一位\n\t\t//console.log(\"limitWhatStr>>>>>\",limitWhatStr);\n\t\t//拼接limitStr>>>end\n\n\t\tvar sql ='update '+collection+' set price = case id '+limitStrPrice+ ' end,hight = case id '+limitStrHight+' end,low = case id '+limitStrLow+' end,vol = case id '+limitStrVol+' end,rate_percent = case id '+limitStrRate_percent+' end,timestamp = case id '+limitStrTimestamp+' end where id in(' +limitWhatStr+')';\n\t\t\n\t\t//update bian1 set bian2 =case id bian3 end where id in(bian4);\n\t\t//bian1 collection --ok\n\t\t//bian2 price\n\t\t//bian3 when 470 then '666'\n\t\t//bian4 470,469\n\t\t//update +collection+ set +upObj+ +limitObj+ end where +skipObj+ in (skipObjWhat);\n\t\t//示例-根据id更新>>update huobi_symbol_latest set price = case id when 470 then '666' when 469 then '777' end where id in(470,469);\n\n\t\t\tdbhelper.updateMany(sql,function(err,result){\n\t\t\t\tif (result) {\n\n\t\t\t\t\tconsole.log('>>>>>>update symbol Success');\n\t\t\t\t\t//重新插入最新数据\n\n\t\t\t\t}else{\n\n\t\t\t\t\tconsole.log('>>>>>>update symbol err',err);\n\n\t\t\t\t}\n\t\t\t\n\t\t\t//res.json({'res_code':'0000','describe':'Success,Consistency between database data and exchange data'});\n\n\t\t\t})\n\t\t\t\n\t\t});\n\n\t\treturn p ;\n\t\t\n\t}\n\n\tcheck()\n\t.then(function(data){\n\n\t\tif (data.db ==='insert') { return insert() };//插入\n\n\t    if(data.db ==='update') { return update() };//更新\n\n\t})\n\t.then(function(data){\n\t\t\n\t    return Test3(data);\n\n\t});\n\t\n\treturn 0;\n}\n\nmodule.exports.findData=function(options,resData,cb){\n\n}\n\n\n\n\n\n\n\n\n\n"]}