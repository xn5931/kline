{"version":3,"sources":["../../src/controllers/monitorController.js"],"names":["request","require","md5","app","monitor","req","res","collection","query","period","currency","ex","table","json","nowTime","Date","nowTimeStamp","getTime","nowTimeYmd","date","onlymd","getPrice","p","Promise","resolve","reject","obj","price","cbMas","sortJ","a","b","ID","sort","D_value","countNum","cbMasClose","cbMasOpen","cbMasHigh","cbMasLow","kRange","i","push","OPEN","CLOSE","HIGH","LOW","getMaximin","arr","maximin","Math","max","apply","min","nowPrice","Number","cbMasOpenMax","cbMasOpenMin","cbMasCloseMax","cbMasCloseMin","cbMasHighMax","cbMasHighMin","cbMasLowMax","cbMasLowMin","data","compute","unusualType","monitorPrice","console","log","check","createID","newID","replace","substring","length","whereObj","limit","sortObj","dbhelper","findOne","result","count","carryOut","update","D_change","toFixed","NaN","upObj","updateOneById","err","insert","keyObj","value","insertOne","then","getData","find","resData","module","exports"],"mappings":"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","file":"monitorController.js","sourcesContent":["var request = require('request');\nvar md5 =require(\"md5\");\nimport monitor from '../models/monitor';\nimport date from '../lib/date';\nimport dbhelper from '../models/dbhelper';\n\n\n\nvar app = {\n\n    monitor: function(req,res){\n\n    var collection = req.query.collection;//表\n    var period= req.query.period;//期间\n    var currency = req.query.currency;//交易对货币类型\n    var ex = req.query.ex;//交易所\n    var table = 'monitor_bookkeeping';\n    if (collection && period && currency &&ex) {}else{res.json({\"none\":\"null req query\"});return ;}\n    \n    //Coinmarketcap实时数据\n \n\n    //连续价格波动监测(连续突破和连续破位) - - 最新价格破位之前的所有计算都权重变减1\n      var nowTime = new Date();//时间\n      var nowTimeStamp = new Date().getTime();//当前时间戳\n      var nowTimeYmd = date.onlymd(nowTimeStamp);//年月日\n\n      /*获取筛选数据\n        nowPrice\n        cbMasOpenMax\n        cbMasOpenMin\n        cbMasCloseMax\n        cbMasCloseMin\n        cbMasHighMax\n        cbMasHighMin\n        cbMasLowMax\n        cbMasLowMin\n      */\n      function getPrice(){\n          \n        var p = new Promise(function(resolve, reject){\n\n          var obj = {'whereObj':'ID,OPEN,CLOSE,HIGH,LOW'};//dbhelper - - obj\n\n          monitor.price(collection,obj,function(cbMas){ \n\n            function sortJ(a,b){//按照id把k线json数据排序  \n              return b.ID-a.ID;\n            };\n\n            cbMas=cbMas.sort(sortJ);//排序后的cbMas\n    \n\n            var D_value = 0;//权重\n            var countNum = -1; //记数\n            var cbMasClose = [];//所有收盘价\n            var cbMasOpen = [];//所有开盘价\n            var cbMasHigh = [];//所有最高点\n            var cbMasLow = [];//所有的最低点\n            var kRange = 5 ;//监测的k线范围\n\n            for(var i in cbMas){ //筛选到新数组\n\n                countNum++;\n\n                if (countNum<kRange) {\n\n                  cbMasOpen.push(cbMas[i].OPEN);//开盘价\n                  cbMasClose.push(cbMas[i].CLOSE);//收盘价\n                  cbMasHigh.push(cbMas[i].HIGH);//最高价\n                  cbMasLow.push(cbMas[i].LOW);//最低价\n                }\n            }\n\n            function getMaximin(arr,maximin) { //筛选最大值和最小值\n\n              if(maximin==\"max\") { //最大\n\n                return Math.max.apply(Math,arr); \n              }else if(maximin==\"min\") { //最小\n\n                return Math.min.apply(Math, arr); \n              } \n            } \n\n            var nowPrice = Number(cbMas[0].CLOSE);//当前价\n            var cbMasOpenMax = getMaximin(cbMasOpen,\"max\");//开盘最大\n            var cbMasOpenMin = getMaximin(cbMasOpen,\"min\");//开盘最小\n            var cbMasCloseMax = getMaximin(cbMasClose,\"max\");//收盘最大\n            var cbMasCloseMin = getMaximin(cbMasClose,\"min\");//收盘最小\n            var cbMasHighMax = getMaximin(cbMasHigh,\"max\");//最高最大\n            var cbMasHighMin = getMaximin(cbMasHigh,\"min\");//最高最小\n            var cbMasLowMax = getMaximin(cbMasLow,\"max\");//最低最大\n            var cbMasLowMin = getMaximin(cbMasLow,\"min\");//最低最小\n            \n            var data = [{'nowPrice':nowPrice,//当前价0\n                        'cbMasOpenMax':cbMasOpenMax,//开盘最大1\n                        'cbMasOpenMin':cbMasOpenMin,//开盘最小2\n                        'cbMasCloseMax':cbMasCloseMax,//收盘最大3\n                        'cbMasCloseMin':cbMasCloseMin,//收盘最小4\n                        'cbMasHighMax':cbMasHighMax,//最高最大5\n                        'cbMasHighMin':cbMasHighMin,//最高最小6\n                        'cbMasLowMax':cbMasLowMax,//最低最大7\n                        'cbMasLowMin':cbMasLowMax}];//最低最小8\n\n            // console.log(\"当前价\",cbMas[0].CLOSE);//当前价0\n            // console.log(getMaximin(cbMasOpen,\"max\"));//开盘最大1\n            // console.log(getMaximin(cbMasOpen,\"min\"));//开盘最小2\n            // console.log(getMaximin(cbMasClose,\"max\"));//收盘最大3\n            // console.log(getMaximin(cbMasClose,\"min\"));//收盘最小4\n            // console.log(getMaximin(cbMasHigh,\"max\"));//最高最大5\n            // console.log(getMaximin(cbMasHigh,\"min\"));//最高最小6\n            // console.log(getMaximin(cbMasLow,\"max\"));//最低最大7\n            // console.log(getMaximin(cbMasLow,\"min\"));//最低最小8\n            resolve(data);\n          });\n\n        });\n           return p;\n      } \n      /*\n        计算数据:\n          1.破位 - - 跌破最低点 - - 当前价小于cbMasLowMax\n          2.突破 - - 突破最高点 - - 当前价大于cbMasHighMax\n          3.\n      */\n      function compute(data){\n      \n        var p = new Promise(function(resolve, reject){\n\n          if (data[0].nowPrice < data[0].cbMasLowMax) {//跌破最低点\n\n            data[0].unusualType = '破位';// 类型 - - 跌破最低点\n            data[0].monitorPrice = data[0].cbMasLowMax;//监测的基准价格\n          }else if (data[0].nowPrice > data[0].cbMasHighMax) {//突破最高点\n\n            data[0].unusualType = '突破';// 类型 - - 突破最高点\n            data[0].monitorPrice = data[0].cbMasHighMax;//监测的基准价格\n          }else{\n\n            console.log(\"other\");\n            data[0].unusualType = 0;// 类型 - - 其他\n          }\n          resolve(data);\n            \n        })\n        return p;\n      } \n\n      //查询异常波动消息\n      function check(data){\n         var p = new Promise(function(resolve, reject){\n\n              //查询异动消息是否已经记录  \n              var createID = ex+currency+period;//创建ID\n              var newID= md5(createID);//生成ID\n                  newID = newID.replace(/[^0-9]/ig,\"\");//去除字母\n              var ID = newID.substring(newID.length-5);//取值后5位\n              var obj = {whereObj:'COUNT(*) as count',limit:'ID',sortObj:ID}; \n\n              dbhelper.findOne(table,obj,function(result){\n\n                if (result && result[0].count === 0) {\n\n                  data[0].carryOut = 1;//执行类型插入 \n                }else{\n\n                  data[0].carryOut = 2;//执行类型更新 \n                }\n\n                data[0].ID = ID;//  add- - ID\n\n                resolve(data);\n              })\n           });\n        return p;\n      }\n\n      //更新异常波动消息\n      function update(data){\n         var p = new Promise(function(resolve, reject){\n\n            var D_change = ((data[0].nowPrice - data[0].monitorPrice)/data[0].nowPrice)*100;//涨跌幅-百分比\n                D_change = D_change.toFixed(2);//保留小数点后面2位\n                if(D_change ==NaN){ D_change = 0; }\n            let upObj = ' VALID_TIME = \"'+ nowTimeYmd +\n                        '\",PRICE = \"'+data[0].nowPrice+\n                        '\",RATE_PERCENT = \"'+ D_change+'\"';\n\n            dbhelper.updateOneById(table,data[0].ID,upObj,function(err,result){//执行更新最新一条\n              if (!err) {\n\n                res.json({\"res_code\":\"02\"});\n              }else{\n\n                console.log(err);\n                return ; \n              }\n            })\n           });\n        return p;\n      }\n \n      /*\n        ID 唯一身份id \n        START_TIME 第一次监测到发生的ymd时间 \n        VALID_TIME 有效时间  \n        EX 交易所  \n        CURRENCY交易对  \n        PERIOD 区间  \n        PRICE 价格  \n        RATE_PERCENT涨跌 \n        TYPE异常波动的消息类型 \n      */\n      //插入异常波动消息 \n      function insert(data){\n      \n        var p = new Promise(function(resolve, reject){\n\n              var keyObj = 'ID,START_TIME,VALID_TIME,EX,CURRENCY,PERIOD,PRICE,RATE_PERCENT,TYPE';\n              var D_change = ((data[0].nowPrice - data[0].monitorPrice)/data[0].nowPrice)*100;//涨跌幅-百分比\n                  D_change = D_change.toFixed(2);//保留小数点后面2位\n                  if(D_change === NaN){ D_change = 0; }\n              var value =  data[0].ID+',\"'+nowTimeYmd+'\",\"'+nowTimeYmd+'\",\"'+ex+'\",\"'+currency+'\",\"'+period+'\",\"'+data[0].nowPrice+'\",\"'+D_change+'\",\"'+data[0].unusualType+'\"';\n  \n              dbhelper.insertOne(table,keyObj,value,function(err,result){\n                \n                if (!err) {\n\n                  res.json({\"res_code\":\"01\"});\n                }else{\n                  console.log(err);\n                }\n              })\n           });\n        return p;\n      } \n\n    getPrice()\n    .then(function(data){\n\n        return compute(data);\n    })\n    .then(function(data){\n\n        return  check(data);\n    })\n    .then(function(data){\n\n        if (data[0].carryOut == 0) { console.log(\"other.\"); res.json({'other':'待更新'}); };//其他\n        if (data[0].carryOut == 1) { console.log(\"insert.\"); return insert(data); };//插入\n        if (data[0].carryOut == 2) { console.log(\"update.\"); return update(data); };//更新\n    });\n \n},\n  //查监测数据\n  getData: function(req,res){\n\n    var collection = 'monitor_bookkeeping';//查的表\n    var obj={\"whereObj\":\"*\"};//查询参数\n\n      dbhelper.find(collection,obj,function(resData){\n\n          res.json({'data':resData});\n      })             \n   }\n}\t\n\nmodule.exports = app;\n\n\n\n\n\n\n\n\n\n"]}