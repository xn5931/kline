{"version":3,"sources":["../../src/controllers/symbolController.js"],"names":["request","require","md5","app","getSymbolData","req","res","ex","query","nowTime","Date","nowTimeStamp","getTime","exType","p","Promise","resolve","reject","url","console","log","huobiApiData","data","error","response","body","statusCode","JSON","parse","e","json","resData","i","symbol","nsymbol","substring","length","newID","id","replace","coinname","lastIndexOf","symbol_type","undefined","price","close","hight","high","rate_percent","open","toFixed","vol","parseInt","count","amount","timestamp","options","symbolModel","insertOne","result","res_code","send","okexApiData","instrument_id","coinnameStr","base_volume_24h","last","high_24h","low","low_24h","open_24h","best_ask","best_bid","product_id","ask","bid","quote_volume_24h","gateApiData","resBody","curr_b","vol_b","valstr","newValstr","no","rate","lq","marketcap","supply","trend","curr_suffix","curr_a","vol_a","pair","name_cn","name_en","name","binanceApiData","priceChange","priceChangePercent","weightedAvgPrice","prevClosePrice","lastPrice","lastQty","bidPrice","bidQty","askPrice","askQty","openPrice","highPrice","lowPrice","volume","quoteVolume","openTime","closeTime","firstId","lastId","then","pushSymbolData","obj","collection","dbhelper","find","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAHA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;;AAEA,IAAIC,MAAKD,QAAQ,KAAR,CAAT;;AAEA,IAAIE,MAAM;AACN;AACAC,mBAAe,uBAASC,GAAT,EAAaC,GAAb,EAAiB;;AAE5B;AACA,YAAIC,KAAKF,IAAIG,KAAJ,CAAUD,EAAnB;AACA,YAAIE,UAAU,IAAIC,IAAJ,EAAd;AACA,YAAIC,eAAe,IAAID,IAAJ,GAAWE,OAAX,EAAnB,CAL4B,CAKY;;AAExC;AACA,iBAASC,MAAT,CAAgBN,EAAhB,EAAmB;;AAEf,gBAAIO,IAAI,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAAyB;;AAErC,oBAAIV,OAAO,OAAX,EAAoB;;AAEhB,wBAAIW,MAAM,yCAAV;AACAF,4BAAQ,EAAC,MAAKT,EAAN,EAAS,OAAMW,GAAf,EAAR;AAEH,iBALD,MAKM,IAAIX,OAAO,SAAX,EAAsB;;AAExB,wBAAIW,MAAM,4CAAV;AACAF,4BAAQ,EAAC,MAAKT,EAAN,EAAS,OAAMW,GAAf,EAAR;AAEH,iBALK,MAKA,IAAIX,OAAO,MAAX,EAAmB;;AAErB,wBAAIW,MAAM,oDAAV;AACAF,4BAAQ,EAAC,MAAKT,EAAN,EAAS,OAAMW,GAAf,EAAR;AAEH,iBALK,MAKA,IAAIX,OAAM,MAAV,EAAkB;;AAEpB,wBAAIW,MAAM,0CAAV;AACAF,4BAAQ,EAAC,MAAKT,EAAN,EAAS,OAAMW,GAAf,EAAR;AAEH,iBALK,MAKD;;AAEDC,4BAAQC,GAAR,CAAY,WAAZ;AACAH,2BAAO,WAAP;AACH;AACJ,aA3BG,CAAR;AA4BC,mBAAOH,CAAP;AACJ;AACD,iBAASO,YAAT,CAAsBC,IAAtB,EAA2B;;AAEvBH,oBAAQC,GAAR,CAAY,sBAAZ;;AAEApB,oBAAQsB,KAAKJ,GAAb,EAAkB,UAAUK,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;;AAE/C,oBAAI,CAACF,KAAD,IAAUC,SAASE,UAAT,IAAuB,GAArC,EAA0C;;AAEtC,wBAAG;AACC,4BAAID,OAAOE,KAAKC,KAAL,CAAWH,IAAX,CAAX,CADD,CAC6B;AAC/B,qBAFD,CAEC,OAAMI,CAAN,EAAQ;AACLV,gCAAQC,GAAR,CAAY,UAAZ,EAAuBS,CAAvB;AACAvB,4BAAIwB,IAAJ,CAAS,EAAC,YAAW,UAAZ,EAAT,EAAiC,EAAC,YAAW,oCAAZ,EAAjC;AACA;AACH;;AAED;AACD;;;;;;;;;;AAUC;;;;;;;;;;;;AAYA;;AAEI,wBAAIC,UAAUN,KAAKH,IAAnB,CAnCkC,CAmCV;;AAExB,yBAAK,IAAIU,CAAT,IAAcD,OAAd,EAAuB;;AAEnB,4BAAIE,SAAQF,QAAQC,CAAR,EAAWC,MAAvB,CAFmB,CAEW;AAC9B,4BAAIC,UAAUD,OAAOE,SAAP,CAAiBF,OAAOG,MAAP,GAAc,CAA/B,CAAd,CAHmB,CAG6B;AAChD,4BAAIC,QAAOnC,IAAI6B,QAAQC,CAAR,EAAWC,MAAf,CAAX,CAJmB,CAIe;AAClC,4BAAIK,KAAKD,MAAME,OAAN,CAAc,UAAd,EAAyB,EAAzB,CAAT,CALmB,CAKoB;AACnCD,6BAAKA,GAAGH,SAAH,CAAaG,GAAGF,MAAH,GAAU,CAAvB,CAAL,CANe,CAMgB;;AAEnC,4BAAIF,WAAW,IAAf,EAAqB;AAAC;;AAElBH,oCAAQC,CAAR,EAAWQ,QAAX,GAAsBP,OAAOE,SAAP,CAAiB,CAAjB,EAAoBF,OAAOQ,WAAP,CAAmB,KAAnB,CAApB,CAAtB,CAFiB,CAEoD;AACrEV,oCAAQC,CAAR,EAAWU,WAAX,GAAyB,KAAzB;AACAX,oCAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CAJiB,CAIE;AACrB;AACC;AACA;AACC;AACA;AACH,yBAVD,MAYK,IAAIJ,WAAW,IAAf,EAAqB;AAAC;;AAEvBH,oCAAQC,CAAR,EAAWQ,QAAX,GAAsBP,OAAOE,SAAP,CAAiB,CAAjB,EAAoBF,OAAOQ,WAAP,CAAmB,KAAnB,CAApB,CAAtB,CAFsB,CAE+C;AACrEV,oCAAQC,CAAR,EAAWU,WAAX,GAAyB,KAAzB;AACAX,oCAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CAJsB,CAIH;AACtB,yBALI,MAOA,IAAIJ,WAAW,IAAf,EAAqB;AAAC;;AAEvBH,oCAAQC,CAAR,EAAWQ,QAAX,GAAsBP,OAAOE,SAAP,CAAiB,CAAjB,EAAoBF,OAAOQ,WAAP,CAAmB,MAAnB,CAApB,CAAtB,CAFsB,CAEgD;AACtEV,oCAAQC,CAAR,EAAWU,WAAX,GAAyB,MAAzB;AACAX,oCAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CAJsB,CAIH;AACtB,yBALI,MAOA,IAAIJ,WAAW,IAAf,EAAqB;AAAC;;AAEvBH,oCAAQC,CAAR,EAAWQ,QAAX,GAAsBP,OAAOE,SAAP,CAAiB,CAAjB,EAAoBF,OAAOQ,WAAP,CAAmB,IAAnB,CAApB,CAAtB,CAFsB,CAE8C;AACpEV,oCAAQC,CAAR,EAAWU,WAAX,GAAyB,IAAzB;AACAX,oCAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CAJsB,CAIH;AAEtB,yBANI,MAOD;AACA,mCAAOP,QAAQC,CAAR,CAAP;AAEH;AACD,4BAAGD,QAAQC,CAAR,MAAeW,SAAlB,EAA4B;AACxB;AACAZ,oCAAQC,CAAR,EAAWY,KAAX,GAAmBb,QAAQC,CAAR,EAAWa,KAA9B,CAFwB,CAEY;AACpCd,oCAAQC,CAAR,EAAWc,KAAX,GAAmBf,QAAQC,CAAR,EAAWe,IAA9B,CAHwB,CAGW;AACnC,gCAAIC,eAAgB,CAACjB,QAAQC,CAAR,EAAWa,KAAX,GAAiBd,QAAQC,CAAR,EAAWiB,IAA7B,IAAmClB,QAAQC,CAAR,EAAWiB,IAA/C,GAAqD,GAAxE,CAJwB,CAIoD;AACxED,2CAAeA,aAAaE,OAAb,CAAqB,CAArB,CAAf,CALoB,CAKmB;AAC3C,gCAAGF,gBAAgB,KAAnB,EAAyB;AAACA,+CAAe,CAAf;AAAkB,6BANpB,CAMoB;AAC5CjB,oCAAQC,CAAR,EAAWgB,YAAX,GAA0BA,YAA1B;AACA,gCAAIG,MAAMpB,QAAQC,CAAR,EAAWmB,GAArB;AACIA,kCAAMC,SAASD,GAAT,CAAN,CAToB,CASA;AACxBpB,oCAAQC,CAAR,EAAWmB,GAAX,GAAiBA,GAAjB,CAVwB,CAUH;;;AAGrB;AACA,mCAAOpB,QAAQC,CAAR,EAAWC,MAAlB,CAdwB,CAcC;AACzB,mCAAOF,QAAQC,CAAR,EAAWiB,IAAlB,CAfwB,CAeD;AACvB,mCAAOlB,QAAQC,CAAR,EAAWa,KAAlB,CAhBwB,CAgBA;AACxB,mCAAOd,QAAQC,CAAR,EAAWqB,KAAlB,CAjBwB,CAiBA;AACxB,mCAAOtB,QAAQC,CAAR,EAAWsB,MAAlB,CAlBwB,CAkBC;AACzB;AACAvB,oCAAQC,CAAR,EAAWuB,SAAX,GAAwB5C,YAAxB,CApBwB,CAoBa;AACxC;AACJ;;AAEL;AACA;AACA;;AAEA;AACA,wBAAI6C,UAAQ,EAACjD,IAAG,OAAJ,EAAZ;;AAEAkD,qCAAYC,SAAZ,CAAsBF,OAAtB,EAA8BzB,OAA9B,EAAsC,UAAS4B,MAAT,EAAgB;AAAC;;AAEnD,4BAAIA,UAAUA,OAAOC,QAAP,KAAoB,MAAlC,EAA0C;;AAEtCtD,gCAAIwB,IAAJ,CAAS,EAAC,YAAW,IAAZ,EAAT,EAFsC,CAEV;AAE/B,yBAJD,MAIK;;AAEDxB,gCAAIwB,IAAJ,CAAS,EAAC,YAAW,UAAZ,EAAT,EAAiC,EAAC,YAAW6B,MAAZ,EAAjC,EAFC,CAEqD;AAEzD;AACJ,qBAXD,EAjHsC,CA4HnC;AACN,iBA7HD,MA6HK;;AAED,wBAAI,CAACpC,KAAD,IAAUC,SAASE,UAAT,IAAuB,GAArC,EAAyC;;AAErCP,gCAAQC,GAAR,CAAY,cAAZ;AACAd,4BAAIuD,IAAJ,CAAS,iDAAT;AAEH,qBALD,MAKK;;AAED1C,gCAAQC,GAAR,CAAY,QAAZ,EAAqBG,KAArB;AACAjB,4BAAIuD,IAAJ,CAAS,uBAAT;AACH;AACD;AACH;AACJ,aA7ID;AA8IH;;AAED;AACA,iBAASC,WAAT,CAAqBxC,IAArB,EAA0B;AACvB;;;;;;;;;;;;;;;AAeC;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;AAYAtB,oBAAQsB,KAAKJ,GAAb,EAAkB,UAAUK,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;;AAEnD,oBAAIA,IAAJ,EAAU;AACP;AACC,wBAAG;;AAEC,4BAAIM,UAAUJ,KAAKC,KAAL,CAAWH,IAAX,CAAd,CAFD,CAEgC;AAClC,qBAHD,CAGC,OAAMI,CAAN,EAAQ;;AAELV,gCAAQC,GAAR,CAAY,UAAZ,EAAuBS,CAAvB;AACH;AACJ,iBATD,MASK;;AAEDV,4BAAQC,GAAR,CAAY,OAAZ,EAAoBG,KAApB;AACA;AACH;;AAED;;AAEA,qBAAK,IAAIS,CAAT,IAAcD,OAAd,EAAuB;;AAEnB,wBAAIE,SAAQF,QAAQC,CAAR,EAAW+B,aAAvB,CAFmB,CAEkB;AACjC9B,6BAASA,OAAOE,SAAP,CAAiBF,OAAOG,MAAP,GAAc,CAA/B,CAAT,CAHe,CAG4B;AAC/C,wBAAIC,QAAOnC,IAAI6B,QAAQC,CAAR,EAAW+B,aAAf,CAAX,CAJmB,CAIsB;AACzC,wBAAIzB,KAAKD,MAAME,OAAN,CAAc,UAAd,EAAyB,EAAzB,CAAT,CALmB,CAKoB;AACnCD,yBAAKA,GAAGH,SAAH,CAAaG,GAAGF,MAAH,GAAU,CAAvB,CAAL,CANe,CAMgB;AACnC,wBAAI4B,cAAejC,QAAQC,CAAR,EAAW+B,aAA9B,CAPmB,CAOyB;;AAE5C,wBAAI9B,UAAU,IAAd,EAAoB;AAAC;;AAEjBF,gCAAQC,CAAR,EAAWU,WAAX,GAAyB,KAAzB;AACA,4BAAIS,MAAMpB,QAAQC,CAAR,EAAWiC,eAArB,CAHgB,CAGqB;AACrCd,8BAAMC,SAASD,GAAT,CAAN;AACApB,gCAAQC,CAAR,EAAWmB,GAAX,GAAiBA,GAAjB,CALgB,CAKK;AACrBpB,gCAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CANgB,CAMG;AACnBP,gCAAQC,CAAR,EAAWQ,QAAX,GAAsBwB,YAAY7B,SAAZ,CAAsB,CAAtB,EAAyB6B,YAAYvB,WAAZ,CAAwB,MAAxB,CAAzB,CAAtB,CAPgB,CAOgE;AAEnF,qBATD,MASM,IAAKR,UAAU,IAAf,EAAqB;AAAC;;AAExBF,gCAAQC,CAAR,EAAWU,WAAX,GAAyB,KAAzB;AACAX,gCAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CAHuB,CAGJ;AACnBP,gCAAQC,CAAR,EAAWQ,QAAX,GAAsBwB,YAAY7B,SAAZ,CAAsB,CAAtB,EAAyB6B,YAAYvB,WAAZ,CAAwB,MAAxB,CAAzB,CAAtB,CAJuB,CAIyD;AAChF,4BAAIU,MAAMpB,QAAQC,CAAR,EAAWiC,eAArB,CALuB,CAKc;AACrCd,8BAAMC,SAASD,GAAT,CAAN;AACApB,gCAAQC,CAAR,EAAWmB,GAAX,GAAiBA,GAAjB,CAPuB,CAOF;AAExB,qBATK,MASA,IAAKlB,UAAU,IAAf,EAAqB;AAAC;;AAExBF,gCAAQC,CAAR,EAAWU,WAAX,GAAyB,MAAzB;AACAX,gCAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CAHuB,CAGJ;AACnBP,gCAAQC,CAAR,EAAWQ,QAAX,GAAsBwB,YAAY7B,SAAZ,CAAsB,CAAtB,EAAyB6B,YAAYvB,WAAZ,CAAwB,OAAxB,CAAzB,CAAtB,CAJuB,CAI0D;AACjF,4BAAIU,MAAMpB,QAAQC,CAAR,EAAWiC,eAArB,CALuB,CAKc;AACrCd,8BAAMC,SAASD,GAAT,CAAN;AACApB,gCAAQC,CAAR,EAAWmB,GAAX,GAAiBA,GAAjB,CAPuB,CAOF;AAExB,qBATK,MASA;;AAEF,+BAAOpB,QAAQC,CAAR,CAAP;AAEH;;AAED,wBAAGD,QAAQC,CAAR,MAAcW,SAAjB,EAA2B;;AAEvB;AACAZ,gCAAQC,CAAR,EAAWY,KAAX,GAAmBb,QAAQC,CAAR,EAAWkC,IAA9B,CAHuB,CAGY;AACnCnC,gCAAQC,CAAR,EAAWc,KAAX,GAAmBf,QAAQC,CAAR,EAAWmC,QAA9B,CAJuB,CAIgB;AACvCpC,gCAAQC,CAAR,EAAWoC,GAAX,GAAiBrC,QAAQC,CAAR,EAAWqC,OAA5B,CALuB,CAKa;AACpC,4BAAIrB,eAAgB,CAACjB,QAAQC,CAAR,EAAWkC,IAAX,GAAgBnC,QAAQC,CAAR,EAAWsC,QAA5B,IAAsCvC,QAAQC,CAAR,EAAWsC,QAAlD,GAA4D,GAA/E,CANuB,CAM4D;AACnFvC,gCAAQC,CAAR,EAAWgB,YAAX,GAAyBA,aAAaE,OAAb,CAAqB,CAArB,CAAzB,CAPuB,CAO0B;;AAEjD;AACA,+BAAOnB,QAAQC,CAAR,EAAWuC,QAAlB,CAVuB,CAUI;AAC3B,+BAAOxC,QAAQC,CAAR,EAAWwC,QAAlB,CAXuB,CAWI;AAC3B,+BAAOzC,QAAQC,CAAR,EAAW+B,aAAlB,CAZuB,CAYS;AAChC,+BAAOhC,QAAQC,CAAR,EAAWyC,UAAlB,CAbuB,CAaM;AAC7B,+BAAO1C,QAAQC,CAAR,EAAWkC,IAAlB,CAduB,CAcA;AACvB,+BAAOnC,QAAQC,CAAR,EAAW0C,GAAlB,CAfuB,CAeD;AACtB,+BAAO3C,QAAQC,CAAR,EAAW2C,GAAlB,CAhBuB,CAgBD;AACtB,+BAAO5C,QAAQC,CAAR,EAAWsC,QAAlB,CAjBuB,CAiBI;AAC3B,+BAAOvC,QAAQC,CAAR,EAAWmC,QAAlB,CAlBuB,CAkBI;AAC3B,+BAAOpC,QAAQC,CAAR,EAAWqC,OAAlB,CAnBuB,CAmBG;AAC1B,+BAAOtC,QAAQC,CAAR,EAAWiC,eAAlB,CApBuB,CAoBW;AAClC,+BAAOlC,QAAQC,CAAR,EAAW4C,gBAAlB,CArBuB,CAqBY;AACnC,+BAAO7C,QAAQC,CAAR,EAAWuB,SAAlB,CAtBuB,CAsBK;;AAE5B;AACAxB,gCAAQC,CAAR,EAAWuB,SAAX,GAAwB5C,YAAxB,CAzBuB,CAyBc;AAExC;AACJ;AACD;AACA;AACA,oBAAI6C,UAAQ,EAACjD,IAAG,MAAJ,EAAZ;;AAEAkD,iCAAYC,SAAZ,CAAsBF,OAAtB,EAA8BzB,OAA9B,EAAsC,UAAS4B,MAAT,EAAgB;;AAElD,wBAAIA,UAAUA,OAAOC,QAAP,KAAoB,MAAlC,EAA0C;;AAEtCtD,4BAAIwB,IAAJ,CAAS,EAAC,YAAW,IAAZ,EAAT,EAFsC,CAEV;AAE/B,qBAJD,MAIK;;AAEDxB,4BAAIwB,IAAJ,CAAS,EAAC,YAAW,UAAZ,EAAT,EAAiC,EAAC,YAAW6B,MAAZ,EAAjC,EAFC,CAEqD;AAEzD;AACJ,iBAXD,EA9FmD,CAyGhD;AACN,aA1GG;AA2GJ,mBAAO,CAAP;AACH;AACG;AACA,iBAASkB,WAAT,CAAqBvD,IAArB,EAA0B;;AAE1B;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;AAYAtB,oBAAQsB,KAAKJ,GAAb,EAAkB,UAAUK,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;;AAE/C,oBAAIA,IAAJ,EAAU;AACP;;AAEC,wBAAG;;AAEC,4BAAIqD,UAAUnD,KAAKC,KAAL,CAAWH,IAAX,CAAd,CAFD,CAEgC;AAC/B,4BAAIM,UAAU+C,QAAQxD,IAAtB;AAEH,qBALD,CAKC,OAAMO,CAAN,EAAQ;;AAELV,gCAAQC,GAAR,CAAY,aAAZ,EAA0BS,CAA1B;AAEH;AACJ,iBAbD,MAaK;;AAEDV,4BAAQC,GAAR,CAAY,OAAZ,EAAoBG,KAApB;AACA;AACH;;AAED;;AAEA,qBAAK,IAAIS,CAAT,IAAcD,OAAd,EAAuB;;AAEnB,wBAAIE,SAAQF,QAAQC,CAAR,EAAW+C,MAAvB,CAFmB,CAEW;;AAE9B9C,6BAASA,OAAOE,SAAP,CAAiBF,OAAOG,MAAP,GAAc,CAA/B,CAAT,CAJmB,CAIwB;;AAE3C,wBAAIH,UAAU,IAAd,EAAoB;AAAC;;AAEjBF,gCAAQC,CAAR,EAAWU,WAAX,GAAyB,KAAzB;AACAX,gCAAQC,CAAR,EAAWmB,GAAX,GAAiBpB,QAAQC,CAAR,EAAWgD,KAA5B,CAHgB,CAGkB;AAErC,qBALD,MAKM,IAAK/C,UAAU,IAAf,EAAqB;AAAC;;AAExBF,gCAAQC,CAAR,EAAWU,WAAX,GAAyB,KAAzB;AACAX,gCAAQC,CAAR,EAAWmB,GAAX,GAAiBpB,QAAQC,CAAR,EAAWgD,KAA5B,CAHuB,CAGW;AAErC,qBALK,MAKA,IAAK/C,UAAU,IAAf,EAAqB;AAAC;;AAEvBF,gCAAQC,CAAR,EAAWU,WAAX,GAAyB,MAAzB;AACA;AACA,4BAAIuC,SAASlD,QAAQC,CAAR,EAAWgD,KAAxB;AACA,4BAAIE,YAAYD,OAAO1C,OAAP,CAAe,GAAf,EAAoB,EAApB,CAAhB,CALsB,CAKkB;;AAEzC;;AAGH,qBAVK,MAUA;;AAEF,+BAAOR,QAAQC,CAAR,CAAP;AAEH;;AAED,wBAAGD,QAAQC,CAAR,MAAcW,SAAjB,EAA2B;;AAEvB;AACAZ,gCAAQC,CAAR,EAAWM,EAAX,GAAiBP,QAAQC,CAAR,EAAWmD,EAA5B,CAHuB,CAGQ;AAC/BpD,gCAAQC,CAAR,EAAWQ,QAAX,GAAuBT,QAAQC,CAAR,EAAWC,MAAlC,CAJuB,CAIkB;AACzCF,gCAAQC,CAAR,EAAWY,KAAX,GAAmBb,QAAQC,CAAR,EAAWoD,IAA9B,CALuB,CAKY;AACnCrD,gCAAQC,CAAR,EAAWc,KAAX,GAAmB,CAAnB,CANuB,CAMF;AACrBf,gCAAQC,CAAR,EAAWoC,GAAX,GAAiB,CAAjB,CAPuB,CAOJ;AACnBrC,gCAAQC,CAAR,EAAWmB,GAAX,GAAiB,CAAjB,CARuB,CAQJ;;AAEnB;AACA,+BAAOpB,QAAQC,CAAR,EAAWqD,EAAlB,CAXuB,CAWF;AACrB,+BAAOtD,QAAQC,CAAR,EAAWsD,SAAlB,CAZuB,CAYK;AAC5B,+BAAOvD,QAAQC,CAAR,EAAWuD,MAAlB,CAbuB,CAaE;AACzB,+BAAOxD,QAAQC,CAAR,EAAWwD,KAAlB,CAduB,CAcC;AACxB,+BAAOzD,QAAQC,CAAR,EAAWyD,WAAlB,CAfuB,CAeO;AAC9B,+BAAO1D,QAAQC,CAAR,EAAW0D,MAAlB,CAhBuB,CAgBE;AACzB,+BAAO3D,QAAQC,CAAR,EAAW+C,MAAlB,CAjBuB,CAiBE;AACzB,+BAAOhD,QAAQC,CAAR,EAAW2D,KAAlB,CAlBuB,CAkBC;AACxB,+BAAO5D,QAAQC,CAAR,EAAWgD,KAAlB,CAnBuB,CAmBC;AACxB,+BAAOjD,QAAQC,CAAR,EAAWoD,IAAlB,CApBuB,CAoBA;AACvB,+BAAOrD,QAAQC,CAAR,EAAW4D,IAAlB,CArBuB,CAqBA;AACvB,+BAAO7D,QAAQC,CAAR,EAAW6D,OAAlB,CAtBuB,CAsBG;AAC1B,+BAAO9D,QAAQC,CAAR,EAAW8D,OAAlB,CAvBuB,CAuBG;AAC1B,+BAAO/D,QAAQC,CAAR,EAAW+D,IAAlB,CAxBuB,CAwBA;AACvB,+BAAOhE,QAAQC,CAAR,EAAWC,MAAlB,CAzBuB,CAyBE;AACzB,+BAAOF,QAAQC,CAAR,EAAWmD,EAAlB,CA1BuB,CA0BF;;AAErB;AACApD,gCAAQC,CAAR,EAAWuB,SAAX,GAAwB5C,YAAxB,CA7BuB,CA6Bc;AAExC;AAEJ;AACD;AACA;AACA,oBAAI6C,UAAQ,EAACjD,IAAG,MAAJ,EAAZ;;AAEAkD,iCAAYC,SAAZ,CAAsBF,OAAtB,EAA8BzB,OAA9B,EAAsC,UAAS4B,MAAT,EAAgB;;AAElDxC,4BAAQC,GAAR,CAAY,oBAAZ,EAAiCuC,MAAjC;;AAEA,wBAAIA,UAAUA,OAAOC,QAAP,KAAoB,MAAlC,EAA0C;;AAEtCtD,4BAAIwB,IAAJ,CAAS,EAAC,YAAW,IAAZ,EAAT,EAFsC,CAEV;AAE/B,qBAJD,MAIK;;AAEDxB,4BAAIwB,IAAJ,CAAS,EAAC,YAAW,UAAZ,EAAT,EAAiC,EAAC,YAAW6B,MAAZ,EAAjC,EAFC,CAEqD;AAEzD;AACJ,iBAbD,EA7F+C,CA0G5C;AACN,aA3GD;AA4GA,mBAAO,CAAP;AAGC;AACD;AACA,iBAASqC,cAAT,CAAwB1E,IAAxB,EAA6B;;AAEzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,gBAAIS,UAAU,CAAE,EAAEE,QAAQ,QAAV;AACNgE,6BAAa,YADP;AAENC,oCAAoB,OAFd;AAGNC,kCAAkB,YAHZ;AAINC,gCAAgB,YAJV;AAKNC,2BAAW,YALL;AAMNC,yBAAS,YANH;AAONC,0BAAU,YAPJ;AAQNC,wBAAQ,YARF;AASNC,0BAAU,YATJ;AAUNC,wBAAQ,YAVF;AAWNC,2BAAW,YAXL;AAYNC,2BAAW,YAZL;AAaNC,0BAAU,YAbJ;AAcNC,wBAAQ,iBAdF;AAeNC,6BAAa,eAfP;AAgBNC,0BAAU,aAhBJ;AAiBNC,2BAAW,aAjBL;AAkBNC,yBAAS,SAlBH;AAmBNC,wBAAQ,SAnBF;AAoBN9D,uBAAO,MApBD,EAAF,EAqBN,EAAEpB,QAAQ,QAAV;AACEgE,6BAAa,aADf;AAEEC,oCAAoB,QAFtB;AAGEC,kCAAkB,YAHpB;AAIEC,gCAAgB,YAJlB;AAKEC,2BAAW,QALb;AAMEC,yBAAS,YANX;AAOEC,0BAAU,YAPZ;AAQEC,wBAAQ,YARV;AASEC,0BAAU,YATZ;AAUEC,wBAAQ,YAVV;AAWEC,2BAAW,YAXb;AAYEC,2BAAW,YAZb;AAaEC,0BAAU,YAbZ;AAcEC,wBAAQ,iBAdV;AAeEC,6BAAa,eAff;AAgBEC,0BAAU,aAhBZ;AAiBEC,2BAAW,aAjBb;AAkBEC,yBAAS,QAlBX;AAmBEC,wBAAQ,QAnBV;AAoBE9D,uBAAO,KApBT,EArBM,CAAd;;AA2CE,iBAAK,IAAIrB,CAAT,IAAcD,OAAd,EAAuB;;AAEnB,oBAAIE,SAAQF,QAAQC,CAAR,EAAWC,MAAvB,CAFmB,CAEW;AAC1BA,yBAASA,OAAOE,SAAP,CAAiBF,OAAOG,MAAP,GAAc,CAA/B,CAAT,CAHe,CAG4B;AAC/C,oBAAIC,QAAOnC,IAAI6B,QAAQC,CAAR,EAAWC,MAAf,CAAX,CAJmB,CAIe;AAClC,oBAAIK,KAAKD,MAAME,OAAN,CAAc,UAAd,EAAyB,EAAzB,CAAT,CALmB,CAKoB;AACnCD,qBAAKA,GAAGH,SAAH,CAAaG,GAAGF,MAAH,GAAU,CAAvB,CAAL,CANe,CAMgB;AACnC,oBAAI4B,cAAejC,QAAQC,CAAR,EAAWC,MAA9B,CAPmB,CAOkB;;AAErC,oBAAIA,UAAU,IAAd,EAAoB;AAAC;;AAEjBF,4BAAQC,CAAR,EAAWU,WAAX,GAAyB,KAAzB;AACA,wBAAIS,MAAMpB,QAAQC,CAAR,EAAW+E,WAArB,CAHgB,CAGiB;AACjC5D,0BAAMC,SAASD,GAAT,CAAN;AACApB,4BAAQC,CAAR,EAAWmB,GAAX,GAAiBA,GAAjB,CALgB,CAKK;AACrBpB,4BAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CANgB,CAMG;AACnBP,4BAAQC,CAAR,EAAWQ,QAAX,GAAsBwB,YAAY7B,SAAZ,CAAsB,CAAtB,EAAyB6B,YAAYvB,WAAZ,CAAwB,KAAxB,CAAzB,CAAtB,CAPgB,CAO+D;AAElF,iBATD,MASM,IAAKR,UAAU,IAAf,EAAqB;AAAC;;AAExBF,4BAAQC,CAAR,EAAWU,WAAX,GAAyB,KAAzB;AACAX,4BAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CAHuB,CAGJ;AACnBP,4BAAQC,CAAR,EAAWQ,QAAX,GAAsBwB,YAAY7B,SAAZ,CAAsB,CAAtB,EAAyB6B,YAAYvB,WAAZ,CAAwB,KAAxB,CAAzB,CAAtB,CAJuB,CAIwD;AAC/E,wBAAIU,MAAMpB,QAAQC,CAAR,EAAW+E,WAArB,CALuB,CAKU;AACjC5D,0BAAMC,SAASD,GAAT,CAAN;AACApB,4BAAQC,CAAR,EAAWmB,GAAX,GAAiBA,GAAjB,CAPuB,CAOF;AAExB,iBATK,MASA,IAAKlB,UAAU,IAAf,EAAqB;AAAC;;AAExBF,4BAAQC,CAAR,EAAWU,WAAX,GAAyB,MAAzB;AACAX,4BAAQC,CAAR,EAAWM,EAAX,GAAgBA,EAAhB,CAHuB,CAGJ;AACnBP,4BAAQC,CAAR,EAAWQ,QAAX,GAAsBwB,YAAY7B,SAAZ,CAAsB,CAAtB,EAAyB6B,YAAYvB,WAAZ,CAAwB,MAAxB,CAAzB,CAAtB,CAJuB,CAIyD;AAChF,wBAAIU,MAAMpB,QAAQC,CAAR,EAAW+E,WAArB,CALuB,CAKU;AACjC5D,0BAAMC,SAASD,GAAT,CAAN;AACApB,4BAAQC,CAAR,EAAWmB,GAAX,GAAiBA,GAAjB,CAPuB,CAOF;AAExB,iBATK,MASA;;AAEF,2BAAOpB,QAAQC,CAAR,CAAP;AAEH;;AAED,oBAAGD,QAAQC,CAAR,MAAcW,SAAjB,EAA2B;;AAEvB;AACAZ,4BAAQC,CAAR,EAAWY,KAAX,GAAmBb,QAAQC,CAAR,EAAWqE,SAA9B,CAHuB,CAGiB;AACxCtE,4BAAQC,CAAR,EAAWc,KAAX,GAAmBf,QAAQC,CAAR,EAAW4E,SAA9B,CAJuB,CAIiB;AACxC7E,4BAAQC,CAAR,EAAWoC,GAAX,GAAiBrC,QAAQC,CAAR,EAAW6E,QAA5B,CALuB,CAKc;AACrC,wBAAI7D,eAAgB,CAACjB,QAAQC,CAAR,EAAWqE,SAAX,GAAqBtE,QAAQC,CAAR,EAAW2E,SAAjC,IAA4C5E,QAAQC,CAAR,EAAW2E,SAAxD,GAAmE,GAAtF,CANuB,CAMmE;AAC1F5E,4BAAQC,CAAR,EAAWgB,YAAX,GAAyBA,aAAaE,OAAb,CAAqB,CAArB,CAAzB,CAPuB,CAO0B;;AAEjD;AACA,2BAAOnB,QAAQC,CAAR,EAAWC,MAAlB,CAVuB,CAUE;AACzB,2BAAOF,QAAQC,CAAR,EAAWiE,WAAlB,CAXuB,CAWO;AAC9B,2BAAOlE,QAAQC,CAAR,EAAWkE,kBAAlB,CAZuB,CAYc;AACrC,2BAAOnE,QAAQC,CAAR,EAAWmE,gBAAlB,CAbuB,CAaY;AACnC,2BAAOpE,QAAQC,CAAR,EAAWqE,SAAlB,CAduB,CAcK;AAC5B,2BAAOtE,QAAQC,CAAR,EAAWsE,OAAlB,CAfuB,CAeG;AAC1B,2BAAOvE,QAAQC,CAAR,EAAWuE,QAAlB,CAhBuB,CAgBI;AAC3B,2BAAOxE,QAAQC,CAAR,EAAW0E,MAAlB,CAjBuB,CAiBE;AACzB,2BAAO3E,QAAQC,CAAR,EAAW2E,SAAlB,CAlBuB,CAkBK;AAC5B,2BAAO5E,QAAQC,CAAR,EAAW4E,SAAlB,CAnBuB,CAmBK;AAC5B,2BAAO7E,QAAQC,CAAR,EAAW6E,QAAlB,CApBuB,CAoBI;AAC3B,2BAAO9E,QAAQC,CAAR,EAAW8E,MAAlB,CArBuB,CAqBE;AACzB,2BAAO/E,QAAQC,CAAR,EAAW+E,WAAlB,CAtBuB,CAsBO;AAC9B,2BAAOhF,QAAQC,CAAR,EAAWgF,QAAlB,CAvBuB,CAuBG;AAC1B,2BAAOjF,QAAQC,CAAR,EAAWiF,SAAlB,CAxBuB,CAwBI;AAC3B,2BAAOlF,QAAQC,CAAR,EAAWkF,OAAlB,CAzBuB,CAyBE;AACzB,2BAAOnF,QAAQC,CAAR,EAAWmF,MAAlB,CA1BuB,CA0BC;AACxB,2BAAOpF,QAAQC,CAAR,EAAWqB,KAAlB,CA3BuB,CA2BA;;AAEvB;AACAtB,4BAAQC,CAAR,EAAWuB,SAAX,GAAwB5C,YAAxB,CA9BuB,CA8Bc;AAExC;AACJ;AACD;AACA;AACA,gBAAI6C,UAAQ,EAACjD,IAAG,SAAJ,EAAZ;;AAEAkD,6BAAYC,SAAZ,CAAsBF,OAAtB,EAA8BzB,OAA9B,EAAsC,UAAS4B,MAAT,EAAgB;;AAElD,oBAAIA,UAAUA,OAAOC,QAAP,KAAoB,MAAlC,EAA0C;;AAEtCtD,wBAAIwB,IAAJ,CAAS,EAAC,YAAW,IAAZ,EAAT,EAFsC,CAEV;AAE/B,iBAJD,MAIK;;AAEDxB,wBAAIwB,IAAJ,CAAS,EAAC,YAAW,UAAZ,EAAT,EAAiC,EAAC,YAAW6B,MAAZ,EAAjC,EAFC,CAEqD;AAEzD;AACJ,aAXD,EA1IyB,CAqJtB;;AAIN;;AAEL;AACA9C,eAAON,EAAP,EACC6G,IADD,CACM,UAAS9F,IAAT,EAAc;;AAEhB,gBAAIA,KAAKf,EAAL,KAAY,OAAhB,EAAyB;AAAC;AACtB,uBAAOc,aAAaC,IAAb,CAAP;AACH,aAFD,MAEM,IAAGA,KAAKf,EAAL,KAAY,MAAf,EAAsB;AAAC;AACzB,uBAAOuD,YAAYxC,IAAZ,CAAP;AACH,aAFK,MAEA,IAAGA,KAAKf,EAAL,KAAY,MAAf,EAAsB;AAAC;AACzB,uBAAOsE,YAAYvD,IAAZ,CAAP;AACH,aAFK,MAEA,IAAGA,KAAKf,EAAL,KAAY,SAAf,EAAyB;AAAC;AAC5B,uBAAOyF,eAAe1E,IAAf,CAAP;AACH,aAFK,MAED;AACDH,wBAAQC,GAAR,CAAY,aAAZ;AACF;AACH,SAdH;AAeC,KAvqBK;AAwqBNiG,oBAAe,wBAAShH,GAAT,EAAaC,GAAb,EAAiB;AAAC;;AAE7B,YAAID,OAAOA,IAAIG,KAAJ,CAAUD,EAAV,KAAgB,OAAvB,IAAkCF,IAAIG,KAAJ,CAAUD,EAAV,KAAgB,SAAlD,IAA+DF,IAAIG,KAAJ,CAAUD,EAAV,KAAgB,MAA/E,IAAyFF,IAAIG,KAAJ,CAAUD,EAAV,KAAgB,MAA7G,EAAqH;;AAEjH,gBAAIA,KAAKF,IAAIG,KAAJ,CAAUD,EAAnB,CAFiH,CAE3F;;AAEtB,gBAAI+G,MAAI,EAAC,YAAW,GAAZ,EAAR,CAJiH,CAIxF;;AAEzB,gBAAIC,aAAalH,IAAIG,KAAJ,CAAUD,EAAV,GAAa,+BAA9B,CANiH,CAMnD;;AAE9DiH,+BAASC,IAAT,CAAcF,UAAd,EAAyBD,GAAzB,EAA6B,UAASvF,OAAT,EAAiB;;AAE1CzB,oBAAIwB,IAAJ,CAAS,EAAC,QAAOC,OAAR,EAAT;AAEH,aAJD;AAMH,SAdD,MAcK;;AAEDzB,gBAAIwB,IAAJ,CAAS,EAAC,YAAW,UAAZ,EAAuB,YAAW,SAAlC,EAAT;AACA;AACH;AACJ;AA7rBK,CAAV;AA+rBA4F,OAAOC,OAAP,GAAiBxH,GAAjB","file":"symbolController.js","sourcesContent":["import klineModel from '../models/kline';\nimport gtpHelp from './help/getCoinTransactionPairListHelp';\nvar request = require('request');\nimport symbolModel from '../models/symbol';\nvar md5 =require(\"md5\");\nimport dbhelper from '../models/dbhelper';\nvar app = {\n    //获取交易所api实时数据，增删改查处理成统一的格式提交给model层(存储到数据库)- - pass\n    getSymbolData: function(req,res){\n\n        //判断传入参数 - - 所属交易所类型 - - 'huobi','okex','binance','gate'\n        var ex = req.query.ex;\n        var nowTime = new Date();\n        var nowTimeStamp = new Date().getTime();//当前时间戳\n\n        //交易所类型选择(定义api接口)- - exType()\n        function exType(ex){\n\n            var p = new Promise(function(resolve, reject){\n\n                    if (ex === 'huobi') { \n\n                        var url = \"https://api.huobi.br.com/market/tickers\"                    \n                        resolve({'ex':ex,'url':url});\n\n                    }else if (ex === 'binance') {\n\n                        var url = \"https://api.binance.com/api/v1/ticker/24hr\"\n                        resolve({'ex':ex,'url':url});\n\n                    }else if (ex === 'okex') { \n\n                        var url = \"https://www.okex.me/api/spot/v3/instruments/ticker\"\n                        resolve({'ex':ex,'url':url});\n\n                    }else if (ex ==='gate') { \n\n                        var url = \"https://data.gateio.co/api2/1/marketlist\" \n                        resolve({'ex':ex,'url':url});\n\n                    }else{\n\n                        console.log(\"传入的ex参数错误\");\n                        reject(\"传入的ex参数错误\");\n                    }\n                });\n             return p;\n        } \n        function huobiApiData(data){\n\n            console.log(\"huobiApiData>>>ok...\");\n\n            request(data.url, function (error, response, body) {\n                \n                if (!error && response.statusCode == 200) {\n                    \n                    try{\n                        var body = JSON.parse(body);//将json字符串转换成json对象\n                    }catch(e){\n                        console.log(\"error...\",e);\n                        res.json({'res_code':'01030003'},{'describe':'res json error- -Too Many Requests'});\n                        return ;\n                    }\n\n                    //console.log(body.data[0])\n                   /* 获取的交易所数据示例\n                   { open: 0.303969,\n                      close: 0.306964,\n                      low: 0.29661,\n                      high: 0.309624,\n                      amount: 8427.399578576687,以基础币种计量的交易量 xmr\n                      count: 3798,\n                      vol: 2568.0727276771813,以报价币种计量的交易量eth\n                      symbol: 'xmreth' }\n                    */\n                    /* \n                        数据库表中所需插入的数据\n                        ID - - 自增 ok\n                        COINNAME - - 币名 symbol（前）\n                        PRICE - - 当前价 close\n                        HIGHT - - 最高价 high\n                        LOW - - 最低价 low\n                        VOL - - 成交量 vol\n                        RATE_PERCENT - - 涨跌幅百分比 （open-close）/open 保留小数点后一位（10.1%）\n                        SYMBOL_TYPE - - 交易对类型(usdt,btc,eth...) symbol（后）\n                        TIMESTAMP - - 时间戳 ok\n                    */ \n                    //if (body) {\n\n                        var resData = body.data;//接收后台返的json\n                        \n                        for (var i in resData) {\n                            \n                            var symbol =resData[i].symbol;//遍历所有属性交易对\n                            var nsymbol = symbol.substring(symbol.length-2);//截取后两位字符判断交易对的所属\n                            var newID= md5(resData[i].symbol);//生成id\n                            var id = newID.replace(/[^0-9]/ig,\"\"); //去除字母\n                                id = id.substring(id.length-5);//取值后5位\n\n                            if (nsymbol == \"tc\") {//btc\n\n                                resData[i].coinname = symbol.substring(0, symbol.lastIndexOf('btc'));//删除末尾的多余字符btc-(ethbtc)\n                                resData[i].symbol_type = \"btc\";\n                                resData[i].id = id;//id\n                              //  var test = resData[i].symbol.charCodeAt();\n                               // console.log(\"idididiidididi1.....\",test,resData[i].symbol);\n                               // var str =\"aa32b231\";\n                                //var value = str.replace(/[^0-9]/ig,\"\"); \n                                //console.log(\"ok?>>>>>>>>>>\",value);   \n                            }\n                            \n                            else if (nsymbol == \"th\") {//eth\n\n                                resData[i].coinname = symbol.substring(0, symbol.lastIndexOf('eth'));//删除末尾的多余字符btc-(ethbtc)\n                                resData[i].symbol_type = \"eth\";\n                                resData[i].id = id;//id\n                            }\n\n                            else if (nsymbol == \"dt\") {//usdt\n\n                                resData[i].coinname = symbol.substring(0, symbol.lastIndexOf('usdt'));//删除末尾的多余字符btc-(ethbtc)\n                                resData[i].symbol_type = \"usdt\";\n                                resData[i].id = id;//id  \n                            }\n\n                            else if (nsymbol == \"ht\") {//ht\n\n                                resData[i].coinname = symbol.substring(0, symbol.lastIndexOf('ht'));//删除末尾的多余字符btc-(ethbtc)\n                                resData[i].symbol_type = \"ht\";\n                                resData[i].id = id;//id\n                                \n                            }\n                            else{\n                                delete resData[i];\n\n                            }\n                            if(resData[i] !== undefined){\n                                //改\n                                resData[i].price = resData[i].close;//当前价\n                                resData[i].hight = resData[i].high;//最高价\n                                var rate_percent = ((resData[i].close-resData[i].open)/resData[i].open)*100;//涨跌幅\n                                    rate_percent = rate_percent.toFixed(2);//保留小数点后面3位\n                                if(rate_percent == \"NaN\"){rate_percent = 0;}//排除NaN\n                                resData[i].rate_percent = rate_percent;\n                                var vol = resData[i].vol;\n                                    vol = parseInt(vol);//取整\n                                resData[i].vol = vol;//成交量去除小数部分\n                                \n                                \n                                //删\n                                delete resData[i].symbol //删除key - - symbol\n                                delete resData[i].open //删除key - - open\n                                delete resData[i].close //删除key - - close\n                                delete resData[i].count //删除key - - count\n                                delete resData[i].amount //删除key - - amount\n                                //增\n                                resData[i].timestamp =  nowTimeStamp;//时间戳    \n                            }  \n                        }\n\n                    // }else{\n                    //     throw new Error(res)\n                    // }\n\n                    //交易所api接口获取的实时数据,处理后提交给model\n                    var options={ex:\"huobi\"};\n                    \n                    symbolModel.insertOne(options,resData,function(result){//console.log(\"获取到了执行结果>>>>>>>>>>\",result);\n\n                        if (result && result.res_code === \"0000\") {\n\n                            res.json({'res_code':'01'});//插入或更新成功\n\n                        }else{\n\n                            res.json({'res_code':'01030001'},{'describe':result});//存在错误\n\n                        }\n                    });//model插入数据\n                }else{\n\n                    if (!error && response.statusCode == 429){\n\n                        console.log(\"请求太频繁>>>>>>>\");\n                        res.send(\"'res_code':'01030000','describe':'请求太频繁>>>>>>>'\");\n\n                    }else{\n\n                        console.log(\"004...\",error);\n                        res.send(\"'res_code':'01030004'\");\n                    }\n                    return ;\n                }\n            })  \n        }\n\n        //okex\n        function okexApiData(data){\n           /*   获取的交易所数据示例\n                best_ask: '2.083',\n                best_bid: '2.072',\n                instrument_id: 'WTC-USDT',\n                product_id: 'WTC-USDT',\n                last: '2.078',\n                ask: '2.083',\n                bid: '2.072',\n                open_24h: '1.985',\n                high_24h: '2.336',\n                low_24h: '1.933',\n                base_volume_24h: '82951.99695',\n                timestamp: '2019-07-05T02:43:31.145Z',\n                quote_volume_24h: '179148.38494915'\n            */\n            /*  \n                best_ask    String  卖一价\n                best_bid    String  买一价\n                instrument_id   String  币对名称\n                product_id...\n                last    String  最新成交价\n                ask...\n                bid...\n                open_24h    String  24小时开盘价\n                high_24h    String  24小时最高价\n                low_24h String  24小时最低价\n                base_volume_24h String  24小时成交量，按交易货币统计\n                timestamp   String  系统时间戳\n                quote_volume_24h    String  24小时成交量，按计价货币统计\n            \n            */\n            /* \n                数据库表中所需插入的数据\n                ID - - 唯一 ok\n                COINNAME - - 币名 symbol（前）\n                PRICE - - 当前价 close\n                HIGHT - - 最高价 high\n                LOW - - 最低价 low\n                VOL - - 成交量 vol\n                RATE_PERCENT - - 涨跌幅百分比 （open-close）/open 保留小数点后一位（10.1%）\n                SYMBOL_TYPE - - 交易对类型(usdt,btc,eth...) symbol（后）\n                TIMESTAMP - - 时间戳 ok\n             */ \n            request(data.url, function (error, response, body) {\n\n            if (body) {\n               // console.log(\"body....1\",body.data);\n                try{\n\n                    var resData = JSON.parse(body);//将json字符串转换成json对象\n                }catch(e){\n\n                    console.log(\"error...\",e);\n                }\n            }else{\n\n                console.log(\"error\",error);\n                return ;\n            }\n\n            //console.log(\"resDataresData>>>>\",resData[0]);\n\n            for (var i in resData) {\n                        \n                var symbol =resData[i].instrument_id;//遍历所有属性交易对-判断交易对的所属\n                    symbol = symbol.substring(symbol.length-2);//截取后两位字符判断交易对的所属\n                var newID= md5(resData[i].instrument_id);//生成id\n                var id = newID.replace(/[^0-9]/ig,\"\"); //去除字母\n                    id = id.substring(id.length-5);//取值后5位\n                var coinnameStr =  resData[i].instrument_id;//获取name     \n\n                if (symbol == \"TC\") {//BTC\n            \n                    resData[i].symbol_type = \"btc\";\n                    var vol = resData[i].base_volume_24h;//成交量\n                    vol = parseInt(vol);\n                    resData[i].vol = vol;//成交量去除小数部分\n                    resData[i].id = id;//id\n                    resData[i].coinname = coinnameStr.substring(0, coinnameStr.lastIndexOf('-BTC'));//删除末尾的多余字符-BTC\n\n                }else if  (symbol == \"TH\") {//ETH\n                    \n                    resData[i].symbol_type = \"eth\"; \n                    resData[i].id = id;//id\n                    resData[i].coinname = coinnameStr.substring(0, coinnameStr.lastIndexOf('-ETH'));//删除末尾的多余字符-ETH\n                    var vol = resData[i].base_volume_24h;//成交量\n                    vol = parseInt(vol);\n                    resData[i].vol = vol;//成交量去除小数部分\n                    \n                }else if  (symbol == \"DT\") {//USDT\n\n                    resData[i].symbol_type = \"usdt\";\n                    resData[i].id = id;//id\n                    resData[i].coinname = coinnameStr.substring(0, coinnameStr.lastIndexOf('-USDT'));//删除末尾的多余字符-USDT\n                    var vol = resData[i].base_volume_24h;//成交量\n                    vol = parseInt(vol);\n                    resData[i].vol = vol;//成交量去除小数部分\n                    \n                } else{\n\n                    delete resData[i];\n\n                }\n                                       \n                if(resData[i] !==undefined){\n\n                    //改\n                    resData[i].price = resData[i].last;//当前价\n                    resData[i].hight = resData[i].high_24h;//最高价\n                    resData[i].low = resData[i].low_24h;//最低价\n                    var rate_percent = ((resData[i].last-resData[i].open_24h)/resData[i].open_24h)*100;//涨跌幅\n                    resData[i].rate_percent =rate_percent.toFixed(2);//保留小数点后面2位\n\n                    //删\n                    delete resData[i].best_ask //删除key \n                    delete resData[i].best_bid //删除key \n                    delete resData[i].instrument_id //删除key \n                    delete resData[i].product_id //删除key \n                    delete resData[i].last //删除key \n                    delete resData[i].ask //删除key\n                    delete resData[i].bid //删除key \n                    delete resData[i].open_24h //删除key  \n                    delete resData[i].high_24h //删除key \n                    delete resData[i].low_24h //删除key \n                    delete resData[i].base_volume_24h //删除key \n                    delete resData[i].quote_volume_24h //删除key \n                    delete resData[i].timestamp //删除key \n\n                    //增\n                    resData[i].timestamp =  nowTimeStamp;//时间戳\n                    \n                } \n            }\n            //console.log(\"resData[i]resData[i]resData[i]2\",resData[i]);\n            //交易所api接口获取的实时数据,处理后提交给model\n            var options={ex:\"okex\"};\n            \n            symbolModel.insertOne(options,resData,function(result){\n\n                if (result && result.res_code === \"0000\") {\n\n                    res.json({'res_code':'01'});//插入或更新成功\n\n                }else{\n\n                    res.json({'res_code':'01030001'},{'describe':result});//存在错误\n\n                }\n            });//model插入数据\n        })\n        return 0\n    }\n        //gate\n        function gateApiData(data){\n        \n        /*  symbol : 币种标识\n            name: 币种名称\n            name_en: 英文名称\n            name_cn: 中文名称\n            pair: 交易对\n            rate: 当前价格\n            vol_a: 被兑换货币交易量\n            vol_b: 兑换货币交易量\n            curr_a: 被兑换货币\n            curr_b: 兑换货币\n            curr_suffix: 货币类型后缀\n            rate_percent: 涨跌百分百\n            trend: 24小时趋势 up涨 down跌\n            supply: 币种供应量\n            marketcap: 总市值\n            plot: 趋势数据\n        */ \n        /*\n              data....2 { no: 1,\n              symbol: 'BTC',\n              name: 'Bitcoin',\n              name_en: 'Bitcoin',\n              name_cn: '比特币',\n              pair: 'btc_usdt',\n              rate: '11157.14',\n              vol_a: '7489.0777542725',\n              vol_b: '80,473,175',\n              curr_a: 'BTC',\n              curr_b: 'USDT',\n              curr_suffix: ' USDT',\n              rate_percent: '9.54',\n              trend: 'up',\n              supply: 16596000,\n              marketcap: '185,163,895,440',\n              lq: '0' }\n        */\n        /* \n            数据库表中所需插入的数据\n            ID - - 自增 ok\n            COINNAME - - 币名 symbol（前）\n            PRICE - - 当前价 close\n            HIGHT - - 最高价 high\n            LOW - - 最低价 low\n            VOL - - 成交量 vol\n            RATE_PERCENT - - 涨跌幅百分比 （open-close）/open 保留小数点后一位（10.1%）\n            SYMBOL_TYPE - - 交易对类型(usdt,btc,eth...) symbol（后）\n            TIMESTAMP - - 时间戳 ok\n        */ \n        request(data.url, function (error, response, body) {\n\n            if (body) {\n               // console.log(\"body....1\",body.data);\n\n                try{\n\n                    var resBody = JSON.parse(body);//将json字符串转换成json对象\n                    var resData = resBody.data;\n\n                }catch(e){\n\n                    console.log(\"eee........\",e);\n\n                }\n            }else{\n\n                console.log(\"error\",error);\n                return ;\n            }\n\n            //console.log(\"resDataresData>>>>\",resData[0]);\n\n            for (var i in resData) {\n                        \n                var symbol =resData[i].curr_b;//遍历所有属性交易对-判断交易对的所属\n\n                symbol = symbol.substring(symbol.length-2);//截取后两位字符判断交易对的所属\n\n                if (symbol == \"TC\") {//BTC\n            \n                    resData[i].symbol_type = \"btc\";\n                    resData[i].vol = resData[i].vol_b;//成交量\n\n                }else if  (symbol == \"TH\") {//ETH\n                    \n                    resData[i].symbol_type = \"eth\"; \n                    resData[i].vol = resData[i].vol_b;//成交量\n                    \n                }else if  (symbol == \"DT\") {//USDT\n\n                     resData[i].symbol_type = \"usdt\";\n                     //console.log(\"resData[i]......>>>>>>\",resData[i]);\n                     var valstr = resData[i].vol_b;\n                     var newValstr = valstr.replace(',', '');//去除vol里面的逗号\n\n                    // console.log(\">>>>>>>>>>>123\",valstr,newValstr);\n                     \n                    \n                } else{\n\n                    delete resData[i];\n\n                }\n                                       \n                if(resData[i] !==undefined){\n\n                    //改\n                    resData[i].id =  resData[i].no;//ID\n                    resData[i].coinname =  resData[i].symbol;//name \n                    resData[i].price = resData[i].rate;//当前价\n                    resData[i].hight = 0;//最高价\n                    resData[i].low = 0;//最高价\n                    resData[i].vol = 0;//成交量\n                    \n                    //删\n                    delete resData[i].lq //删除key \n                    delete resData[i].marketcap //删除key \n                    delete resData[i].supply //删除key \n                    delete resData[i].trend //删除key \n                    delete resData[i].curr_suffix //删除key \n                    delete resData[i].curr_a //删除key \n                    delete resData[i].curr_b //删除key \n                    delete resData[i].vol_a //删除key \n                    delete resData[i].vol_b //删除key\n                    delete resData[i].rate //删除key \n                    delete resData[i].pair //删除key  \n                    delete resData[i].name_cn //删除key \n                    delete resData[i].name_en //删除key \n                    delete resData[i].name //删除key \n                    delete resData[i].symbol //删除key \n                    delete resData[i].no //删除key \n\n                    //增\n                    resData[i].timestamp =  nowTimeStamp;//时间戳\n                    \n                } \n\n            }\n            //console.log(\"resData[i]resData[i]resData[i]2\",resData[i]);\n            //交易所api接口获取的实时数据,处理后提交给model\n            var options={ex:\"gate\"};\n            \n            symbolModel.insertOne(options,resData,function(result){\n\n                console.log(\"获取到了执行结果>>>>>>>>>>\",result);\n\n                if (result && result.res_code === \"0000\") {\n\n                    res.json({'res_code':'01'});//插入或更新成功\n\n                }else{\n\n                    res.json({'res_code':'01030001'},{'describe':result});//存在错误\n\n                }\n            });//model插入数据\n        })\n        return 0\n\n      \n        }\n        //binance\n        function binanceApiData(data){\n\n            // request(data.url, function (error, response, body) {\n            //     if (!error && response.statusCode == 200) {\n                    \n            //         try{\n            //             var body = JSON.parse(body);//将json字符串转换成json对象\n\n            //         }catch(e){\n            //             console.log(\"error...\",e);\n            //             return ;\n            //         }\n            //       var resData = body;\n            //     }\n            // })\n          var resData = [ { symbol: 'ETHBTC',\n                    priceChange: '0.00005900',\n                    priceChangePercent: '0.268',\n                    weightedAvgPrice: '0.02209048',\n                    prevClosePrice: '0.02204300',\n                    lastPrice: '0.02209600',\n                    lastQty: '0.00600000',\n                    bidPrice: '0.02209600',\n                    bidQty: '1.48600000',\n                    askPrice: '0.02210400',\n                    askQty: '7.43300000',\n                    openPrice: '0.02203700',\n                    highPrice: '0.02232000',\n                    lowPrice: '0.02193200',\n                    volume: '129672.91200000',\n                    quoteVolume: '9999.53642815',\n                    openTime: 1564021959446,\n                    closeTime: 1564108359446,\n                    firstId: 135786523,\n                    lastId: 135922084,\n                    count: 135562 },\n                  { symbol: 'LTCBTC',\n                    priceChange: '-0.00003400',\n                    priceChangePercent: '-0.359',\n                    weightedAvgPrice: '0.00940891',\n                    prevClosePrice: '0.00948400',\n                    lastPrice: '777777',\n                    lastQty: '1.81000000',\n                    bidPrice: '0.00944800',\n                    bidQty: '0.21000000',\n                    askPrice: '0.00945000',\n                    askQty: '8.11000000',\n                    openPrice: '0.00948300',\n                    highPrice: '0.00953700',\n                    lowPrice: '0.00924000',\n                    volume: '122041.47000000',\n                    quoteVolume: '1148.27659740',\n                    openTime: 1564021959305,\n                    closeTime: 1564108359305,\n                    firstId: 32160320,\n                    lastId: 32207722,\n                    count: 47403 }]; \n\n            for (var i in resData) {\n                        \n                var symbol =resData[i].symbol;//遍历所有属性交易对-判断交易对的所属\n                    symbol = symbol.substring(symbol.length-2);//截取后两位字符判断交易对的所属\n                var newID= md5(resData[i].symbol);//生成id\n                var id = newID.replace(/[^0-9]/ig,\"\"); //去除字母\n                    id = id.substring(id.length-5);//取值后5位\n                var coinnameStr =  resData[i].symbol;//获取name     \n\n                if (symbol == \"TC\") {//BTC\n            \n                    resData[i].symbol_type = \"btc\";\n                    var vol = resData[i].quoteVolume;//成的btc数量(成交量)\n                    vol = parseInt(vol);\n                    resData[i].vol = vol;//成交量去除小数部分\n                    resData[i].id = id;//id\n                    resData[i].coinname = coinnameStr.substring(0, coinnameStr.lastIndexOf('BTC'));//删除末尾的多余字符BTC\n\n                }else if  (symbol == \"TH\") {//ETH\n                    \n                    resData[i].symbol_type = \"eth\"; \n                    resData[i].id = id;//id\n                    resData[i].coinname = coinnameStr.substring(0, coinnameStr.lastIndexOf('ETH'));//删除末尾的多余字符ETH\n                    var vol = resData[i].quoteVolume;//成的eth数量(成交量)\n                    vol = parseInt(vol);\n                    resData[i].vol = vol;//成交量去除小数部分\n                    \n                }else if  (symbol == \"DT\") {//USDT\n\n                    resData[i].symbol_type = \"usdt\";\n                    resData[i].id = id;//id\n                    resData[i].coinname = coinnameStr.substring(0, coinnameStr.lastIndexOf('USDT'));//删除末尾的多余字符USDT\n                    var vol = resData[i].quoteVolume;//成的usdt数量(成交量)\n                    vol = parseInt(vol);\n                    resData[i].vol = vol;//成交量去除小数部分\n                    \n                } else{\n\n                    delete resData[i];\n\n                }\n                                       \n                if(resData[i] !==undefined){\n\n                    //改\n                    resData[i].price = resData[i].lastPrice;//当前价\n                    resData[i].hight = resData[i].highPrice;//最高价\n                    resData[i].low = resData[i].lowPrice;//最低价\n                    var rate_percent = ((resData[i].lastPrice-resData[i].openPrice)/resData[i].openPrice)*100;//涨跌幅\n                    resData[i].rate_percent =rate_percent.toFixed(2);//保留小数点后面2位\n\n                    //删\n                    delete resData[i].symbol //删除key \n                    delete resData[i].priceChange //删除key \n                    delete resData[i].priceChangePercent //删除key \n                    delete resData[i].weightedAvgPrice //删除key \n                    delete resData[i].lastPrice //删除key \n                    delete resData[i].lastQty //删除key\n                    delete resData[i].bidPrice //删除key \n                    delete resData[i].askQty //删除key  \n                    delete resData[i].openPrice //删除key \n                    delete resData[i].highPrice //删除key \n                    delete resData[i].lowPrice //删除key \n                    delete resData[i].volume //删除key \n                    delete resData[i].quoteVolume //删除key \n                    delete resData[i].openTime//删除key\n                    delete resData[i].closeTime//删除key\n                    delete resData[i].firstId//删除key\n                    delete resData[i].lastId//删除key\n                    delete resData[i].count//删除key\n\n                    //增\n                    resData[i].timestamp =  nowTimeStamp;//时间戳\n                    \n                } \n            }\n            //console.log(\"resData[i]resData[i]resData[i]2\",resData[i]);\n            //交易所api接口获取的实时数据,处理后提交给model\n            var options={ex:\"binance\"};\n            \n            symbolModel.insertOne(options,resData,function(result){\n\n                if (result && result.res_code === \"0000\") {\n\n                    res.json({'res_code':'01'});//插入或更新成功\n\n                }else{\n\n                    res.json({'res_code':'01030001'},{'describe':result});//存在错误\n\n                }\n            });//model插入数据          \n\n\n\n        }\n \n    //开始执行>>>exType()选择传入参数类型\n    exType(ex)\n    .then(function(data){\n\n        if (data.ex === \"huobi\") {//- - huobi\n            return huobiApiData(data);\n        }else if(data.ex === \"okex\"){//- - okex\n            return okexApiData(data);\n        }else if(data.ex === \"gate\"){//- - gate\n            return gateApiData(data);\n        }else if(data.ex === \"binance\"){//- -binance\n            return binanceApiData(data);\n        }else{\n            console.log(\"ex error...\");\n         }\n      });\n    },\n    pushSymbolData:function(req,res){//api -(存储在数据库的交易所交易对列表的实时数据 - 推送到前端 - - pass)\n\n        if (req && req.query.ex ===\"huobi\" || req.query.ex ===\"binance\" || req.query.ex ===\"okex\" || req.query.ex ===\"gate\") {\n\n            var ex = req.query.ex;//交易所类型\n\n            var obj={\"whereObj\":\"*\"};//查询参数\n\n            var collection = req.query.ex+'_symbol_latest ORDER BY PRICE';//查表\n\n            dbhelper.find(collection,obj,function(resData){\n\n                res.json({'data':resData});\n\n            })             \n\n        }else{\n\n            res.json({'res_code':'01030009','describe':'ex null'});\n            return ;\n        }\n    }\n}\nmodule.exports = app;\n\n\n\n\n\n\n\n"]}