{"version":3,"sources":["../../src/models/kline.js"],"names":["mysql","require","klineController","connection","createConnection","host","user","password","port","database","module","exports","addKline","resData","cb","collection","ex","currency","period","obj","findMas","p","Promise","resolve","reject","dbhelper","find","mas","err","mid","dbNewmas","count","data","exNewmas","id","kType","parseInt","console","log","updateKline","upObj","open","close","low","high","update_time","vol","key","value","updateOneByKey","result","insertKline","arr","arr2","updateArr","insertCount","i","push","addKlineSql_value_arr","map","val","index","addKlineSql_value","addKlineSql_value_str","toString","addKlineSql","query","type","updateOneById","then"],"mappings":"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","file":"kline.js","sourcesContent":["import db from '../db';\nimport dbhelper from './dbhelper';\n\nvar mysql  = require('mysql'); \n\nvar klineController = require('../controllers/klineController');\n\nvar connection = mysql.createConnection({    \n\n  host     : '127.0.0.1',      \n\n  user     : 'root',             \n\n  password : '123456',      \n\n  port: '3306',                  \n\n  database: 'im_k_data',\n\n});\n//插入一条记录 - - pass\nmodule.exports.addKline=function(resData,cb){\n\n\tvar collection = 'k_'+resData[0].ex+'_'+resData[0].currency+'_'+resData[0].period;//查表\n\tvar obj={'whereObj':'max(id) as mid'};//查询条件\n\n\t//查询数据库最新的一条数据 - - 和ex最新的k线数据做对比\n\tfunction findMas(){\n\n\t\tvar p = new Promise(function(resolve, reject){ \n\n\t\t\tdbhelper.find(collection,obj,function(mas,err){//查询数据库最新的一条数据//console.log(\"mas.......1\",mas[0].mid);\n\t\t\t\t\t\t\t\n\t\t\t\tif(!err){\n\t\t\t\n\t\t\t\t\tif (mas[0].mid === null) {//数据库为空\n\n\t\t\t\t\t\tlet dbNewmas = 0 ; \n\t\t\t\t\t\tvar count = 100;//数据库为空 - -插入100条\n\t\t\t\t\t\tvar data = {'count':count,'type':'insert'};//只执行插入\n\t\t\t\t\t\tresolve(data);//插入\n\n\t\t\t\t\t}else{//数据不为空\n\n\t\t\t\t\t\tlet dbNewmas = mas[0].mid;//数据库最新的一条数据 - - 时间戳\n\t\t\t\t\t\tlet exNewmas = resData[0].id;//当前交易所最新的一条数据 - - 时间戳\n\t\t\t\t\t\tlet kType = resData[0].period;//k线类型 - - 5min 15min ...console.log(\"mmm\",exNewmas,dbNewmas);\n\n\t\t\t\t\t\tvar count = 0;//ex和db相差的数量\n\t\t\t\t\t\tif (kType == '5min'){ count = parseInt(( exNewmas - dbNewmas ) / 300) ; }\n\t\t\t\t\t\tif (kType == '15min'){ count = parseInt(( exNewmas - dbNewmas ) / 900) ; }\n\t\t\t\t\t\tif (kType == '30min'){ count = parseInt(( exNewmas - dbNewmas ) / 1800) ; }\n\t\t\t\t\t\tif (kType == '60min'){ count = parseInt(( exNewmas - dbNewmas ) / 3600) ; }\n\t\t\t\t\t\t//if (kType == '1day'){ count = parseInt(( exNewmas - dbNewmas ) / 86400) ; }\n\n\t\t\t\t\t\t//let data ={'dbNewmas':dbNewmas,'exNewmas':exNewmas,'collection':collection,'klineTimeType':klineTimeType};\n\t\t\t\t\t\tif(count ===0){\n\n\t\t\t\t\t\t\tvar data = {'count':count,'type':'update'};\n\t\t\t\t\t\t\tresolve(data);//更新\n\t\t\t\t\t\t}else if(count >0){//插入+更新\n\n\t\t\t\t\t\t\tvar data = {'count':count,'type':'insertUpdate'};\n\t\t\t\t\t\t\tresolve(data);//先更新再插入\n\t\t\t\t\t\t}else{\n\n\t\t\t\t\t\t\tconsole.log(\" ERROR - - count\",count);\n\t\t\t\t\t\t\treturn ;//退出\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tconsole.log(\"err...\",err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn p ;\n\t}\n\n\t//对比数据库数据和交易所数据 - - 生成需要插入最新k线的数据包\n\tfunction updateKline(){\n\n\t\t//count == 0数据库数据和交易所id保持一致- - 更新最新一条信息//console.log(\"当前数据最新- - - - -数据库数据和交易所数据保持一致\");\n\t\tlet upObj = ' open = '+ resData[0].open +\n\t\t\t\t\t',close = '+resData[0].close+\n\t\t\t\t\t',low = '+ resData[0].low+\n\t\t\t\t\t',high = '+ resData[0].high+\n\t\t\t\t\t',update_time = '+ resData[0].update_time+\n\t\t\t\t\t',vol = '+ resData[0].vol;\n\n\t\tlet key = 'id';\t//根据id更新\n\t\tlet value = resData[0].id;//更新的数据\n\n\t\tdbhelper.updateOneByKey(collection,key,value,upObj,function(err,result){//执行更新最新一条\n\t\t\t\n\t\t\tif (result) {console.log(\"k 更新成功\");cb({'res_code':'0000'});}//更新成功\n\t\t})\n\n\t\treturn ;//！！！\n\t}\n\n\t//插入mysql最新k线数据\n\tfunction insertKline(data){\n\n\t\tvar arr = resData;//最新ex的k线数据\n\t\tvar arr2 = [];\n\t\tvar updateArr = [];\n\t\tvar count = data.count;//相差数量\n\t\tvar insertCount = data.count-1;//插入数量\n\t\t\n\t\tfor (var i = 0;i <= count; i++){//筛选本交易所最新k线数据\n\t\t\tif(i < count){arr2.push(arr[i]);}\n\t\t\tif(i == count){updateArr.push(arr[i]);} //更新 - - 插入的n条的前面一条\n\t\t}\n\t\tvar addKlineSql_value_arr=[];//遍历出来的数据添加到数组\n\t\tarr2.map((val,index)=>{//遍历最新数据\n\t\t\t\tvar addKlineSql_value = '('+val.id+','+val.open+','+val.close+','+val.low+','+val.high+','+val.vol+','+val.update_time\n\t\t\t\t+')';//拼接获取的数据\n\t\t\t\taddKlineSql_value_arr.push(addKlineSql_value);//遍历出来的数据添加到数组\n\t\t})\n\t\t\n\t\tvar addKlineSql_value_str = addKlineSql_value_arr.toString();//数组转字符串 继续执行拼接后的values\n\t\t//id-时间戳timestamp(这条k线是身份时间戳) open-开盘价 close-收盘价 low-最低点 high-最高点 vol-成交量 update_time-更新时间(年月日)\n\t\tvar addKlineSql = 'INSERT INTO '+collection+'(id,open,close,low,high,vol,update_time) VALUES'+addKlineSql_value_str+';'\n\t\t\t//插入k线数据\n\t\t\t//console.log(\"addKlineSqladdKlineSqladdKlineSql2\",addKlineSql);\n\t\t\tconnection.query(addKlineSql,function (err, result) {\n\n\t\t        if(err){\n\t\t        \t//err.message\n\t\t        \tconsole.log('[INSERT ERROR] - ',err);\n\t\t        \treturn ;\n\t\t        }else{\n\t\t        \t//>>>insert\n\t\t        \tif (data.type ==='insert') {console.log('>>>>>>>>insert k Success');  return ;}\n\t\t        \t//>>>insertUpdate\n\t\t        \tif (data.type === 'insertUpdate') {\n\t\t        \t\t\n\t\t\t\t\t\tlet id = updateArr[0].id;//更新插入信息的前面一条\n\t\t\t\t\t\t//id-时间戳timestamp(这条k线是身份时间戳) open-开盘价 close-收盘价 low-最低点 high-最高点 vol-成交量 update_time-更新时间(年月日)\n\t\t\t\t\t\tlet upObj = ' open = '+ updateArr[0].open +\n\t\t\t\t\t\t\t\t\t',close = '+updateArr[0].close+\n\t\t\t\t\t\t\t\t\t',low = '+ updateArr[0].low+\n\t\t\t\t\t\t\t\t\t',high = '+ updateArr[0].high+\n\t\t\t\t\t\t\t\t\t',vol = '+ updateArr[0].vol+\n\t\t\t\t\t\t\t\t\t',update_time = '+ updateArr[0].update_time;\n\n\t\t\t\t\t\tdbhelper.updateOneById(collection,id,upObj,function(err,result){//新的k线生成,避免时间差出现k线数据误差更新倒数第二条信息\n\n\t\t\t\t\t\t\tif(!err){console.log('>>>>>>>insertUpdate k Success');cb({'res_code':'0000'});}else{console.log(err);}\n\t\t\t\t\t\t})\n\t\t        \t}\n\t\t        }\t\t\t    \n\t\t\t});\t\t\t\t\t\t\t\n\t\t}\n\n\t//>>>执行\n\tfindMas()\n\t.then(function(data){\n\t\tif (data.type ==='update') {return updateKline();}\n\t\tif (data.type === 'insert') {return insertKline(data);}\n\t\tif (data.type ==='insertUpdate') {return insertKline(data);}\n\t})\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n"]}