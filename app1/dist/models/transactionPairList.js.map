{"version":3,"sources":["../../src/models/transactionPairList.js"],"names":["mysql","require","klineController","connection","createConnection","host","user","password","port","database","module","exports","insertOneLatest","body","req","res","cb","collection","query","ex","currency","time","obj","findNewKlineId","p","Promise","resolve","reject","dbhelper","find","mas","err","console","log","dbNewmas","exNewmas","data","id","klineTimeType","json","fnAddKlineSql_value","count","upObj","open","close","low","high","amount","vol","updateOneById","result","arr","arr2","i","push","addKlineSql_value_arr","map","val","index","addKlineSql_value","addKlineSql_value_str","toString","addKlineSql_value_data","Test3","addKlineSql","Sql_value_data","then"],"mappings":"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","file":"transactionPairList.js","sourcesContent":["import db from '../db';\nimport dbhelper from './dbhelper';\n\nvar mysql  = require('mysql'); \n\nvar klineController = require('../controllers/klineController');\n\nvar connection = mysql.createConnection({    \n\n  host     : '127.0.0.1',      \n\n  user     : 'root',             \n\n  password : '123456',      \n\n  port: '3306',                  \n\n  database: 'im_k_data',\n\n});\n//插入一条记录\nmodule.exports.insertOneLatest=function(body,req,res,cb){\n\n\t//console.log(\"req....query\",req.query.ex);//huobi\n    //console.log(\"req....query\",req.query.currency);//btcusdt\n    //console.log(\"req....query\",req.query.time);//k线_分钟线 -- 1min\n\n\t//var collection = 'k_huobi_btcusdt_1min';//查表\n\tvar collection = 'k_'+req.query.ex+'_'+req.query.currency+'_'+req.query.time;//查表\n\n\tvar obj={'whereObj':'max(id) as mid'};//查询条件\n\n\tfunction findNewKlineId(){//查询数据库最新的一条数据\n\n\t\tvar p = new Promise(function(resolve, reject){ \n\n\t\t\tdbhelper.find(collection,obj,function(mas,err){//查询数据库最新的一条数据\n\n\t\t\t\tconsole.log(\"mas.......\",mas);\n\n\t\t\t\tif (!err && mas || mas === null) {\n\n\t\t\t\t\t//console.log(\"mas.......\",mas);\n\n\t\t\t\t\t//console.log('body.data[0].id........1111111',body.data[0].id);\n\n\t\t\t\t\tlet dbNewmas = mas;//数据库最新的一条数据\n\n\t\t\t\t\tlet exNewmas = body.data[0].id;//当前交易所最新的一条数据\n\n\t\t\t\t\tlet klineTimeType = req.query.time;//k线类型\n\n\t\t\t\t\tif (mas === null) { dbNewmas = 0 ; }//数据库为空\n\n\t\t\t\t\tlet data ={'dbNewmas':dbNewmas,'exNewmas':exNewmas,'collection':collection,'klineTimeType':klineTimeType};\n\n\t\t\t\t\tresolve(data);\n\n\t\t\t\t}else{\n\n\t\t\t\t\tres.json({'res_code':'01040001','describe':err});//查询max(id)报错\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\n\t\treturn p ;\n\t}\n\tfunction fnAddKlineSql_value(data){//对比数据库数据和交易所数据 - - 生成需要插入最新k线的数据包 - - data里面包含 data.exNewmas && data.dbNewmas\n\n\t\tvar p = new Promise(function(resolve, reject){ \n\n\t\t\t//console.log('fnAddKlineSql_value',data);\n\t\t\t//klineTimeType--k线时间类型 1min, 5min, 15min, 30min, 60min, 1day, 1mon, 1week, 1year\n\t\t\t//数据库和交易所数据相差数量\n\t\t\tif (data.klineTimeType == '1min') { var count = ( data.exNewmas - data.dbNewmas ) / 60 ;}\n\t\t\tif (data.klineTimeType == '5min') { var count = ( data.exNewmas - data.dbNewmas ) / 300 ;}\n\t\t\tif (data.klineTimeType == '15min') { var count = ( data.exNewmas - data.dbNewmas ) / 900 ;}\n\t\t\tif (data.klineTimeType == '30min') { var count = ( data.exNewmas - data.dbNewmas ) / 1800 ;}\n\t\t\tif (data.klineTimeType == '60min') { var count = ( data.exNewmas - data.dbNewmas ) / 3600 ;}\n\t\t\tif (data.klineTimeType == '1day') { var count = ( data.exNewmas - data.dbNewmas ) / 86400 ;}\n\t\t\tif (data.klineTimeType == '1mon') { var count = ( data.exNewmas - data.dbNewmas ) / 2592000 ;}//?\n\t\t\tif (data.klineTimeType == '1week') { var count = ( data.exNewmas - data.dbNewmas ) / 604800 ;}\n\t\t\tif (data.klineTimeType == '1year') { var count = ( data.exNewmas - data.dbNewmas ) / 31536000 ;}//?\n\n\t\t\tif (data.dbNewmas == 0) { count = 10 };\n\n\t\t\t//console.log('数据库和交易所数据相差数量- && -数据库当前条数',count,data.dbNewmas);\n\n\t\t\tif (count == 0) {//数据库数据和交易所id保持一致- - 更新最新一条信息\n\n\t\t\t\t//console.log(\"当前数据最新- - - - -数据库数据和交易所数据保持一致\");\n\n\t\t\t\tlet collection = data.collection; \n\n\t\t\t\tlet id = data.exNewmas ;\n\n\t\t\t\tlet upObj = ' open = '+ body.data[0].open +\n\t\t\t\t\t\t\t',close = '+body.data[0].close+\n\t\t\t\t\t\t\t',low = '+ body.data[0].low+\n\t\t\t\t\t\t\t',high = '+ body.data[0].high+\n\t\t\t\t\t\t\t',amount = '+ body.data[0].amount+\n\t\t\t\t\t\t\t',vol = '+ body.data[0].vol+\n\t\t\t\t\t\t\t',count = '+ body.data[0].count;\n\n\t\t\t\tdbhelper.updateOneById(collection,id,upObj,function(err,result){//执行更新最新一条\n\t\t\t\t\t//console.log(\"....001001\",err,result);\n\t\t\t\t\tcb({'res_code':'0000'});\n\t\t\t\t\t//res.json({'res_code':'0000','describe':'Success,Consistency between database data and exchange data'});\n\t\t\t\t})\n\n\t\t\t\t\n\n\t\t\t\treturn ;//！！！\n\n\t\t\t}else{\n\t\t\t\t\tvar arr = body.data;//最新k线数据\n\n\t\t\t\t\tvar arr2 = [];\n\n\t\t\t\t\tfor (var i = 0; i < count; i++) {//筛选本交易所最新k线数据\n\t\t\t\t\t\tarr2.push(arr[i]);\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(\"arr2arr2arr2arr2\",arr2);\n\t\t\t\t\tvar addKlineSql_value_arr=[];//遍历出来的数据添加到数组\n\n\t\t\t\t\tarr2.map((val,index)=>{//遍历最新数据\n\n  \t\t\t\t\t\tvar addKlineSql_value = '('+val.id+','+val.open+','+val.close+','+val.low+','+val.high+','+val.amount+','+val.vol+','+val.count\n  \t\t\t\t\t\t+')';//拼接获取的数据\n\n  \t\t\t\t\t\t//console.log('addKlineSql_value...123',addKlineSql_value);//遍历出来的数据\n\n  \t\t\t\t\t\taddKlineSql_value_arr.push(addKlineSql_value);//遍历出来的数据添加到数组\n\n\t\t\t\t\t})\n\n\t\t\t\t\tvar addKlineSql_value_str = addKlineSql_value_arr.toString();//数组转字符串\n\n\t\t\t\t\tvar addKlineSql_value_data = {'addKlineSql_value_str':addKlineSql_value_str,'collection':collection};\n\n\t\t\t\t\t//console.log('aaaaaa33333',addKlineSql_value_str);\n\t\t\t\t\n\t\t\t}\n\n\t\t\tresolve(addKlineSql_value_data);//继续执行拼接后的values\n\n\t\t});\n\n\t\treturn p ;\n\t\t\n\t}\n\tfunction Test3(addKlineSql_value_data){//插入mysql最新k线数据\n\n\t\tvar p = new Promise(function(resolve, reject){ \n\n\t\t\t//console.log('Test3',addKlineSql_value_data.addKlineSql_value_str);//传入的数据\n\n\t\t\tvar  addKlineSql = 'INSERT INTO '+addKlineSql_value_data.collection+'(id,open,close,low,high,amount,vol,count) VALUES'+addKlineSql_value_data.addKlineSql_value_str+';'\n\t\t\t\n\t\t\t//console.log(\"sql.......\",addKlineSql);\n\n\t\t\t//插入k线数据\n\t\t\tconnection.query(addKlineSql,function (err, result) {\n\n\t\t        if(err){\n\t\t        \t//err.message\n\t\t        \tconsole.log('[INSERT ERROR] - ');\n\t\t        \treturn ;\n\t\t        }\n\t\t\t    console.log('>>>>>>>>插入新k线 Success'); \n\t\t\t});\n\t\t\t\n\t\t\tvar Sql_value_data = {'collection':addKlineSql_value_data.collection};\n\t\t\tresolve(Sql_value_data);\n\t\t});\n\n\t\treturn p ;\n\t\t\n\t}\n\n\tfindNewKlineId()\n\t.then(function(data){\n\t\t//console.log(\"........000\",data);\n\t\tconsole.log(\"........001\");\n\n\t    return fnAddKlineSql_value(data);\n\n\t})\n\t.then(function(data){\n\t\t//console.log(\"........111\",data);\n\t\tconsole.log(\"........002\");\n\n\t    return Test3(data);\n\n\t})\n\t.then(function(data){\n\t    //console.log(\"........222\",data);\n\t    console.log(\"........003\");\n\n\t\tlet collection = data.collection; \n\n\t\tlet id = body.data[1].id;\n\n\t\tlet upObj = ' open = '+ body.data[1].open +\n\t\t\t\t\t',close = '+body.data[1].close+\n\t\t\t\t\t',low = '+ body.data[1].low+\n\t\t\t\t\t',high = '+ body.data[1].high+\n\t\t\t\t\t',amount = '+ body.data[1].amount+\n\t\t\t\t\t',vol = '+ body.data[1].vol+\n\t\t\t\t\t',count = '+ body.data[1].count;\n\n\t\tdbhelper.updateOneById(collection,id,upObj,function(err,result){//新的k线生成,避免时间差出现k线数据误差更新倒数第二条信息\n\n\t\t\t//console.log(\"....001001\",err,result);\n\t\t\tconsole.log('>>>>>>>>更新次新k线 Success');\n\t\t\tcb({'res_code':'0000'});\n\t\t\t//res.json({'res_code':'0000','describe':'Success,Consistency between database data and exchange data'});\n\n\t\t})\n\t});\n\t\n\treturn 0;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n"]}