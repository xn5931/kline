{"version":3,"sources":["../../src/controllers/klineController.js"],"names":["request","require","app","insertKlineData","req","res","ex","query","currency","period","size","nowTime","Date","nowTimeStamp","getTime","nowTimeYmd","date","ymd","getHuobiKlineData","url","error","response","body","statusCode","updateResData","p","Promise","resolve","reject","i","resData","open","close","low","high","vol","update_time","amount","count","JSON","parse","data","e","console","log","then","klineModel","addKline","result","res_code","json","send","getOkexKlineData","time","id","getGateKlineData","sortJ","a","b","sort","getBinanceKlineData","rp","requestOptions","method","uri","qs","headers","gzip","catch","err","checkCurrency","substring","length","strCurrency","okexCurrency","okexPeriod","gateCurrency","gatePeriod","range_hour","module","exports"],"mappings":"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","file":"klineController.js","sourcesContent":["import klineModel from '../models/kline';\nimport gtpHelp from './help/getCoinTransactionPairListHelp';\nvar request = require('request');\nimport date from '../lib/date';\n\nvar app = {\n\n    insertKlineData: function(req,res){\n        var ex = req.query.ex;//'huobi' - - 交易所\n        var currency = req.query.currency;//btcusdt - - 交易对类型 \n        var period = req.query.period;//5min - - 期间\n        var size = 200;//每次请求的条数\n        var nowTime = new Date();//时间\n        var nowTimeStamp = new Date().getTime();//当前时间戳\n        var nowTimeYmd = date.ymd(nowTimeStamp);//年月日\n\n        //调用huobi-api接口获取k线数据\n        function getHuobiKlineData(url){ \n            request(url,function(error, response, body){\n                if (!error && response.statusCode == 200){\n                                    \n                    try{\n\n                        var resData = JSON.parse(body);//将json字符串转换成json对象\n                            resData = resData.data;\n                    }catch(e){\n\n                        console.log(\"e\",e);\n                        return ;\n                    }\n                    //id-时间戳timestamp(这条k线是身份时间戳) open-开盘价 close-收盘价 low-最低点 high-最高点 vol-成交量 update_time-更新时间(年月日)\n                    function updateResData(){//更新交易所返回的数据(统一格式后提交给model)\n\n                      var p = new Promise(function(resolve, reject){//做一些异步操作\n\n                        for(var i in resData){\n                            \n                            //改\n                            resData[i].open = resData[i].open;\n                            resData[i].close = resData[i].close;\n                            resData[i].low = resData[i].low;\n                            resData[i].high = resData[i].high;\n                            resData[i].vol = resData[i].vol;\n                            //增\n                            resData[i].ex = ex;//交易所\n                            resData[i].currency = currency;//交易对\n                            resData[i].period = period;//k线区间\n                            resData[i].update_time= '\"'+nowTimeYmd+'\"';//更新时间\n                            // 删\n                            delete resData[i].amount;\n                            delete resData[i].count;\n                        }\n                        resolve(resData);\n                      });\n                         return p;\n                    } \n                    updateResData().then(function(data){\n\n                        var resData = data;\n                        //获取到标准格式的k线数据resData\n                        klineModel.addKline(resData,function(result){//console.log(\"获取到了执行结果>>>>>>>>>\",result);\n\n                            if (result && result.res_code === \"0000\") {\n\n                                res.json({'res_code':'01'});\n                            }else{\n\n                                res.json({'res_code':'01030001'},{'describe':'insertKline error'});\n                            }\n                        });\n                    });\n                }else{\n                    \n                    if (!error && response.statusCode == 429){\n                        console.log(\"请求太频繁>>>>>>>\");\n                        res.send(\"'res_code':'01030000','describe':'请求太频繁>>>>>>>'\");\n                    }else{\n                        console.log(\"error\",error);\n                        res.send(\"'res_code':'01030004'\");\n                    }\n                    return ;\n                }\n            })  \n        } \n\n        //调用okex-api接口获取k线数据\n        function getOkexKlineData(url){\n\n            request(url, function (error,response,body) {\n\n                 if (!error && response.statusCode == 200){\n                    \n                    try{\n\n                        var resData = JSON.parse(body);//将json字符串转换成json对象     \n                    }catch(e){\n\n                        console.log(\"e\",e);\n                        return ;\n                    } \n                     //id-时间戳timestamp(这条k线是身份时间戳) open-开盘价 close-收盘价 low-最低点 high-最高点 vol-成交量 update_time-更新时间(年月日)\n                    function updateResData(){//更新交易所返回的数据(统一格式后提交给model)\n\n                      var p = new Promise(function(resolve, reject){//做一些异步操作\n                        \n                        for(var i in resData){\n\n                            var date = new Date(resData[i][0]);\n                            var time = date.getTime();\n                            \n                            //改\n                            resData[i].id = time/1000;//事间戳\n                            resData[i].open = resData[i][1];\n                            resData[i].high = resData[i][2];\n                            resData[i].low = resData[i][3];\n                            resData[i].close = resData[i][4];\n                            resData[i].vol = resData[i][5];\n                            //增\n                            resData[i].ex = ex;//交易所\n                            resData[i].currency = currency;//交易对\n                            resData[i].period = period;//k线区间\n                            resData[i].update_time= '\"'+nowTimeYmd+'\"';//更新时间\n                            // 删\n                            delete resData[0][0];\n                            delete resData[0][1];\n                            delete resData[0][2];\n                            delete resData[0][3];\n                            delete resData[0][4];\n                            delete resData[0][5];\n                           \n                        }\n                        resolve(resData);\n                      });\n                         return p;\n                    } \n                    updateResData().then(function(data){\n                        var resData = data;//console.log(\"取值>>>>>>>>\",resData[0]) //取值test\n                        \n                        //获取到标准格式的k线数据resData\n                        klineModel.addKline(resData,function(result){//console.log(\"获取到了执行结果>>>>>>>>>\",result);\n\n                            if (result && result.res_code === \"0000\") {\n\n                                res.json({'res_code':'01'});\n                            }else{\n\n                                res.json({'res_code':'01030001'},{'describe':'insertKline error'});\n                            }\n                        });\n                    });\n                }else{\n                    console.log(error,response,body);\n                }\n\n                  \n            })       \n        }\n\n        //调用gate-api接口获取k线数据\n        function getGateKlineData(url){\n            request(url, function (error, response, body) {\n                \n                if (!error) {\n\n                    try{\n                        var resData = JSON.parse(body);//将json字符串转换成json对象\n                            resData = resData.data;//将json字符串转换成json对象\n                        //id-时间戳timestamp(这条k线是身份时间戳) open-开盘价 close-收盘价 low-最低点 high-最高点 vol-成交量 update_time-更新时间(年月日)\n                        function updateResData(){//更新交易所返回的数据(统一格式后提交给model)\n\n                          var p = new Promise(function(resolve, reject){//做一些异步操作\n                            \n                            for(var i in resData){\n\n                                //改\n                                resData[i].id = resData[i][0]/1000;//时间戳\n                                resData[i].vol = resData[i][1];//交易量\n                                resData[i].close = resData[i][2];\n                                resData[i].high = resData[i][3];\n                                resData[i].low = resData[i][4];\n                                resData[i].open = resData[i][5];\n\n                                //增\n                                resData[i].ex = ex;//交易所\n                                resData[i].currency = currency;//交易对\n                                resData[i].period = period;//k线区间\n                                resData[i].update_time= '\"'+nowTimeYmd+'\"';//更新时间\n                                // 删\n                                delete resData[i][0];\n                                delete resData[i][1];\n                                delete resData[i][2];\n                                delete resData[i][3];\n                                delete resData[i][4];\n                                delete resData[i][5];  \n                            }\n                             \n                          resolve(resData);\n                          });\n                             return p;\n                        } \n                        updateResData().then(function(data){\n\n                            function sortJ(a,b){//按照id把k线json数据排序 \n                                return b.id-a.id;\n                            };\n                            var resData=data.sort(sortJ);//排序后的data\n                           \n                            //获取到标准格式的k线数据resData\n                            klineModel.addKline(resData,function(result){//console.log(\"获取到了执行结果>>>>>>>>>\",result);\n\n                                if (result && result.res_code === \"0000\") {\n\n                                    res.json({'res_code':'01'});\n                                }else{\n\n                                    res.json({'res_code':'01030001'},{'describe':'insertKline error'});\n                                }\n                            });\n                        });\n                    }catch(e){\n                        console.log(\"eee...\",e);  \n                    }\n                }else{\n                    console.log(\"error\");\n                    return ;\n                }\n            })\n        }\n        //调用binance-api接口获取k线数据\n        function getBinanceKlineData(){\n\n            console.log(\"binance...991\");\n            return 0\n            let nowTime = new Date();\n\n            let nowTimeStamp = new Date().getTime();\n\n            console.log(\"start....binance_get_data>>>>me-TimeStamp\",nowTimeStamp);\n\n            const rp = require('request-promise');\n\n            const requestOptions = {\n              method: 'GET',\n              uri: data.url,\n              qs: {\n               \n              },\n              headers: {\n                'X-MBX-APIKEY': 'YcK7OsEZkD8ycowOtEXOXHeYvzCWsFxxaV6kuD972HcwzhdEG8qz2SdGeG121SmA',//hailian159@gmail.com-hk小号\n                'timestamp':nowTimeStamp//当前时间戳\n\n              },\n              json: true,\n              gzip: true\n            };\n            console.log('API --->>>>>>>>>:',data.url);\n            rp(requestOptions).then(response => {\n              console.log('API call binancebinancebinance----->>>>>>>>>okokok:',nowTimeStamp, response);\n            }).catch((err) => {\n              console.log('API call error:', err);\n            });\n\n            return;\n            \n        }\n    \n        //开始执行>>>\n        if (ex === \"huobi\") {//- - huobi\n\n            var url = 'https://api.huobi.br.com/market/history/kline?period='+period+'&size='+size+'&symbol='+currency;\n            return getHuobiKlineData(url);\n\n        }else if(ex === \"okex\"){//- - okex\n            \n            var checkCurrency = currency.substring(currency.length-2);//截取后两位字符判断交易对的所属\n\n            if (checkCurrency == \"tc\") {//btc   \n              \n                var strCurrency = currency.substring(0,currency.length - 3);//去掉后3位btc\n                var okexCurrency = strCurrency+'-BTC';\n            }\n            if (checkCurrency == \"th\") {//eth\n\n                var strCurrency = currency.substring(0,currency.length - 3);//去掉后3位eth\n                var okexCurrency = strCurrency+'-ETH';\n            }\n            if (checkCurrency == \"dt\") {//usdt\n\n                var strCurrency = currency.substring(0,currency.length - 4);//去掉后4位usdt\n                var okexCurrency = strCurrency+'-USDT';\n            }\n\n            if (period ===\"5min\") {var okexPeriod = 300;}\n            if (period ===\"15min\") {var okexPeriod = 900;}\n            if (period ===\"30min\") {var okexPeriod = 1800;}\n            if (period ===\"60min\") {var okexPeriod = 3600;}\n            if (period ===\"1day\") {var okexPeriod = 86400;}\n\n            var url = 'https://www.okex.me/api/spot/v3/instruments/'+okexCurrency+'/candles?granularity='+okexPeriod;\n\n            return getOkexKlineData(url);\n\n        }else if(ex === \"gate\"){//- - gate\n            console.log(\"start2\");\n            var checkCurrency = currency.substring(currency.length-2);//截取后两位字符判断交易对的所属\n\n            if (checkCurrency == \"tc\") {//btc   \n              \n                var strCurrency = currency.substring(0,currency.length - 3);//去掉后3位btc\n                var gateCurrency = strCurrency+'_btc';\n            }\n            if (checkCurrency == \"th\") {//eth\n\n                var strCurrency = currency.substring(0,currency.length - 3);//去掉后3位eth\n                var gateCurrency = strCurrency+'_eth';\n            }\n            if (checkCurrency == \"dt\") {//usdt\n\n                var strCurrency = currency.substring(0,currency.length - 4);//去掉后4位usdt\n                var gateCurrency = strCurrency+'_usdt';\n            }\n\n            if (period ===\"5min\") {var gatePeriod = 300; var range_hour =8.35;}//5min期间-取24小时内的k线数据\n            if (period ===\"15min\") {var gatePeriod = 900; var range_hour =25;}//15min期间-取24小时内的k线数据\n            if (period ===\"30min\") {var gatePeriod = 1800; var range_hour =50;}//30min期间-取24小时内的k线数据\n            if (period ===\"60min\") {var gatePeriod = 3600; var range_hour =100;}//60min期间-取240小时内的k线数据\n            if (period ===\"1day\") {var gatePeriod = 86400; var range_hour =2400;}//1day期间-取2400小时内的k线数据\n\n            var url = 'https://data.gateio.co/api2/1/candlestick2/'+gateCurrency+'?group_sec='+gatePeriod+'&range_hour='+range_hour;\n            return getGateKlineData(url);\n\n        }else if(ex === \"binance\"){// - -binance\n            var url = '';\n            console.log(\"binance null \");\n            return getBinanceKlineData();\n        }else{\n            console.log(\"income data error......\");\n        }\n    }\n}\n\nmodule.exports = app;\n\n\n\n\n\n\n\n"]}